/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sonja;

import java.awt.Color;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.InputEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.Locale;

import javax.swing.JColorChooser;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import static sonja.Sonja.fiksdato;
import static sonja.Sonja.vindu;
import static sonja.TermStatus.*;
import static sonja.RelationType.*;
/**
 *
 * @author knuthe
 */
public class Sonjavindu extends javax.swing.JFrame {

    static final Locale en = new Locale("en");
    static final Locale nb = new Locale("nb");
    static final Locale nn = new Locale("nn");
    static final Locale la = new Locale("la");
    public static String listefokus = "term";
    public static boolean strengesok = false;
    private String[] tomliste = new String[0];
    private boolean valgmodus = false;
    public Streng currentStreng = null;
    public Term currentTerm = null;
    public static boolean termstart = true;
    public static String bruker = null;
    Hjelpevindu notater = null;
    Hjelpevindu versjonslogg = null;
    Hjelpevindu feedback = null;
    String[] termtyper = {"Term", "Sted", "Tid", "Form"};
    String[] feltvalg = {"Legge til", "Fjerne", "Justere", "Avbryt"};
    String[] seogvalg = {"Legge til", "Fjerne", "Avbryt"};
    String[] overordnetvalg = {"Legge til", "Fjerne", "Avbryt"};
    String[] underordnetvalg = {"Legge til", "Fjerne", "Avbryt"};
    String[] bruktforvalg = {"Legge til", "Fjerne", "Avbryt"};
    String[] multifeltvalg = {
        "Legge til nynorsk", "Fjerne nynorsk", "Endre nynorsk",
        "Legge til engelsk", "Fjerne engelsk", "Endre engelsk",
        "Legge til latin", "Fjerne latin", "Endre latin",
        "Legge til forkortelse", "Fjerne forkortelse",
        "Legge til MSC", "Fjerne MSC",
        "Legge til Dewey", "Fjerne Dewey",
        "Avbryt"
    };

    private boolean seogfraliste = false;
    private boolean overordnetfraliste = false;
    private boolean underordnetfraliste = false;
    private Streng strengbygg = null;
    private ArrayList<Streng> forslag = null;

    /**
     * Creates new form Sonjavindu
     */
    public Sonjavindu() {
        initComponents();
        jList1.setCellRenderer(new MinCelleLayout());
        //setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("../resources/gyro.gif")));
        if (Sonja.vokabular.equals("SMR")) {
            jRadioButton3.setVisible(false);
            jRadioButton5.setVisible(false);
        }
        if (!Sonja.currentuser.equals("Knut")) {
            jMenu7.setVisible(false); // Help
            jMenu8.setVisible(false); // Knuts meny
        }

        // rekkef√∏lgeknapper
        jButton5.setEnabled(false);
        jButton9.setEnabled(false);
        jButton20.setEnabled(false);
        jMenuItem32.setEnabled(false);
        nullstillBasemeny();
        jRadioButtonMenuItem2.setSelected(true);
        velgbaseparametre();
        aktiviserstrengeknapper(false);
        jList1.setListData(tomliste);
        setLocationRelativeTo(null);
        settfokus("term");
        jTextField1.select(0, 0);
        Color col = new Color(0, 0, 255);
        velgfontfarge(col);

        jTabbedPane1.setSelectedComponent(jPanel16);
        jTabbedPane2.setSelectedComponent(jPanel18);
        jTabbedPane1.remove(jPanel4);
        jTabbedPane1.remove(jPanel5);

    }

    public void klar() {
        jTextField1.setText("Initiering er ferdig");
        jTextField1.selectAll();
        if (Sonja.currentuser.equals("SMR")) {
            jMenu7.setVisible(false);
            jMenu8.setVisible(false);
            jMenuItem32.setEnabled(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jTextField18 = new javax.swing.JTextField();
        jTextField19 = new javax.swing.JTextField();
        jTextField20 = new javax.swing.JTextField();
        jTextField21 = new javax.swing.JTextField();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel18 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTextArea10 = new javax.swing.JTextArea();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTextArea11 = new javax.swing.JTextArea();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTextArea12 = new javax.swing.JTextArea();
        jPanel22 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        jTextArea13 = new javax.swing.JTextArea();
        jScrollPane15 = new javax.swing.JScrollPane();
        jTextArea14 = new javax.swing.JTextArea();
        jScrollPane16 = new javax.swing.JScrollPane();
        jTextArea15 = new javax.swing.JTextArea();
        jPanel23 = new javax.swing.JPanel();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton7 = new javax.swing.JRadioButton();
        jRadioButton8 = new javax.swing.JRadioButton();
        jRadioButton9 = new javax.swing.JRadioButton();
        jRadioButton10 = new javax.swing.JRadioButton();
        jRadioButton11 = new javax.swing.JRadioButton();
        jScrollPane17 = new javax.swing.JScrollPane();
        jTextArea16 = new javax.swing.JTextArea();
        jPanel19 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        jTextField22 = new javax.swing.JTextField();
        jTextField23 = new javax.swing.JTextField();
        jTextField24 = new javax.swing.JTextField();
        jTextField25 = new javax.swing.JTextField();
        jTextField26 = new javax.swing.JTextField();
        jScrollPane18 = new javax.swing.JScrollPane();
        jTextArea17 = new javax.swing.JTextArea();
        jScrollPane19 = new javax.swing.JScrollPane();
        jTextArea18 = new javax.swing.JTextArea();
        jScrollPane20 = new javax.swing.JScrollPane();
        jTextArea19 = new javax.swing.JTextArea();
        jPanel25 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel26 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTextArea8 = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel15 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jButton12 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jButton11 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextArea6 = new javax.swing.JTextArea();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextArea7 = new javax.swing.JTextArea();
        jButton10 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTextArea9 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jTextField7 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem42 = new javax.swing.JMenuItem();
        jMenuItem46 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenuItem47 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        jMenuItem20 = new javax.swing.JMenuItem();
        jMenuItem21 = new javax.swing.JMenuItem();
        jMenuItem22 = new javax.swing.JMenuItem();
        jMenuItem23 = new javax.swing.JMenuItem();
        jMenuItem39 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenu9 = new javax.swing.JMenu();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem3 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem4 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem5 = new javax.swing.JRadioButtonMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem30 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem32 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem38 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem24 = new javax.swing.JMenuItem();
        jMenuItem25 = new javax.swing.JMenuItem();
        jMenuItem26 = new javax.swing.JMenuItem();
        jMenuItem27 = new javax.swing.JMenuItem();
        jMenuItem28 = new javax.swing.JMenuItem();
        jMenuItem29 = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        jMenuItem31 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem33 = new javax.swing.JMenuItem();
        jMenuItem34 = new javax.swing.JMenuItem();
        jMenuItem51 = new javax.swing.JMenuItem();
        jMenuItem35 = new javax.swing.JMenuItem();
        jMenuItem36 = new javax.swing.JMenuItem();
        jMenuItem37 = new javax.swing.JMenuItem();
        jMenuItem40 = new javax.swing.JMenuItem();
        jMenuItem41 = new javax.swing.JMenuItem();
        jMenuItem43 = new javax.swing.JMenuItem();
        jMenuItem44 = new javax.swing.JMenuItem();
        jMenuItem45 = new javax.swing.JMenuItem();
        jMenuItem48 = new javax.swing.JMenuItem();
        jMenuItem49 = new javax.swing.JMenuItem();
        jMenuItem50 = new javax.swing.JMenuItem();
        jMenuItem52 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sonja arbeidsvindu - 2016-06-21");
        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 0, 153));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Treffliste", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jList1MouseReleased(evt);
            }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registreringsskjema", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("termtype");

        jTextField17.setEditable(false);
        jTextField17.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jTextField17.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField17.setToolTipText("<html>Term: venstreklikk for √• endre betegnelse.<br>Streng: ikke mulig √• endre her.");
        jTextField17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField17MouseClicked(evt);
            }
        });

        jTextField18.setEditable(false);
        jTextField18.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jTextField18.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField18.setText("ID");

        jTextField19.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jTextField19.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField19.setText("Ny ");

        jTextField20.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jTextField20.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField20.setText("Endret");

        jTextField21.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jTextField21.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField21.setText("Slettet");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField17)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTextArea10.setColumns(20);
        jTextArea10.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jTextArea10.setRows(5);
        jTextArea10.setToolTipText("<html>Venstreklikk i feltet for √• gj√∏re endringer.");
        jTextArea10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Definisjon", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N
        jTextArea10.setEnabled(false);
        jTextArea10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea10MouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(jTextArea10);

        jTextArea11.setEditable(false);
        jTextArea11.setColumns(20);
        jTextArea11.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jTextArea11.setRows(5);
        jTextArea11.setToolTipText("<html>Venstreklikk i feltet for √• f√∏ye til ny henvisning.<br>H√∏yreklikk for √• fjerne eller f√∏ye til.");
        jTextArea11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Se-hit-henvisninger", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N
        jTextArea11.setEnabled(false);
        jTextArea11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea11MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTextArea11MouseReleased(evt);
            }
        });
        jScrollPane12.setViewportView(jTextArea11);

        jTextArea12.setColumns(20);
        jTextArea12.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jTextArea12.setRows(5);
        jTextArea12.setToolTipText("<html>Venstreklikk i feltet for √• gj√∏re endringer.");
        jTextArea12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Intern note", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N
        jTextArea12.setEnabled(false);
        jTextArea12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea12MouseClicked(evt);
            }
        });
        jScrollPane13.setViewportView(jTextArea12);

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                    .addComponent(jScrollPane12)
                    .addComponent(jScrollPane11))
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel21.setText("Relasjoner");

        jTextArea13.setColumns(20);
        jTextArea13.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jTextArea13.setRows(5);
        jTextArea13.setToolTipText("<html>Venstreklikk i feltet for √• f√∏ye til ny overordnet term.<br>H√∏yreklikk for √• fjerne eller f√∏ye til.");
        jTextArea13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Overordnet(e) term(er)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N
        jTextArea13.setEnabled(false);
        jTextArea13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTextArea13MouseReleased(evt);
            }
        });
        jScrollPane14.setViewportView(jTextArea13);

        jTextArea14.setColumns(20);
        jTextArea14.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jTextArea14.setRows(5);
        jTextArea14.setToolTipText("<html>Venstreklikk i feltet for √• f√∏ye til ny underordnet term.<br>H√∏yreklikk for √• fjerne eller f√∏ye til.");
        jTextArea14.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Underordnete termer", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N
        jTextArea14.setEnabled(false);
        jTextArea14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTextArea14MouseReleased(evt);
            }
        });
        jScrollPane15.setViewportView(jTextArea14);

        jTextArea15.setEditable(false);
        jTextArea15.setColumns(20);
        jTextArea15.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jTextArea15.setRows(5);
        jTextArea15.setToolTipText("<html>Venstreklikk i feltet for √• f√∏ye til ny se ogs√•-term.<br>H√∏yreklikk for √• fjerne eller f√∏ye til.");
        jTextArea15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Se ogs√•-termer", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N
        jTextArea15.setEnabled(false);
        jTextArea15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTextArea15MouseReleased(evt);
            }
        });
        jScrollPane16.setViewportView(jTextArea15);

        jRadioButton6.setText("Nynorsk");
        jRadioButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton6ActionPerformed(evt);
            }
        });

        jRadioButton7.setText("Engelsk");
        jRadioButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton7ActionPerformed(evt);
            }
        });

        jRadioButton8.setText("Latin");
        jRadioButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton8ActionPerformed(evt);
            }
        });

        jRadioButton9.setText("Forkort");
        jRadioButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton9ActionPerformed(evt);
            }
        });

        jRadioButton10.setText("MSC");
        jRadioButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton10ActionPerformed(evt);
            }
        });

        jRadioButton11.setText("DDC");
        jRadioButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton11)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton6)
                    .addComponent(jRadioButton7)
                    .addComponent(jRadioButton8)
                    .addComponent(jRadioButton9)
                    .addComponent(jRadioButton10)
                    .addComponent(jRadioButton11))
                .addGap(0, 7, Short.MAX_VALUE))
        );

        jTextArea16.setColumns(20);
        jTextArea16.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jTextArea16.setRows(5);
        jTextArea16.setToolTipText("<html>Velg √∏nsket informasjon med radioknappene.<br>Venstreklikk i feltet for √• f√∏ye til ny betegnelse.<br>H√∏yreklikk for √• fjerne eller f√∏ye til betegnelse eller endre rekkef√∏lge.");
        jTextArea16.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "(se radioknappene)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N
        jTextArea16.setEnabled(false);
        jTextArea16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTextArea16MouseReleased(evt);
            }
        });
        jScrollPane17.setViewportView(jTextArea16);

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane14)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel21)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane15)
                    .addComponent(jScrollPane16)
                    .addComponent(jScrollPane17)
                    .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane17, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane2.addTab("Indekstermbehandling", jPanel18);

        jLabel23.setText("|");

        jTextField22.setEditable(false);
        jTextField22.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jTextField22.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 0, 0), null), "Hovedemne", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N
        jTextField22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField22MouseClicked(evt);
            }
        });

        jTextField23.setEditable(false);
        jTextField23.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jTextField23.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 0, 0), null), "Underemne", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N
        jTextField23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField23MouseClicked(evt);
            }
        });

        jTextField24.setEditable(false);
        jTextField24.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jTextField24.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 0, 0), null), "Sted", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N
        jTextField24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField24MouseClicked(evt);
            }
        });

        jTextField25.setEditable(false);
        jTextField25.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jTextField25.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 0, 0), null), "Tid", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N
        jTextField25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField25MouseClicked(evt);
            }
        });

        jTextField26.setEditable(false);
        jTextField26.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jTextField26.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 0, 0), null), "Form", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N
        jTextField26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField26MouseClicked(evt);
            }
        });

        jScrollPane18.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 0, 0), null), "Brukt for", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jTextArea17.setEditable(false);
        jTextArea17.setColumns(20);
        jTextArea17.setRows(5);
        jTextArea17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea17MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTextArea17MouseReleased(evt);
            }
        });
        jScrollPane18.setViewportView(jTextArea17);

        jScrollPane19.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(102, 102, 0), null), "Dewey", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 102, 0))); // NOI18N

        jTextArea18.setEditable(false);
        jTextArea18.setColumns(20);
        jTextArea18.setRows(5);
        jTextArea18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea18MouseClicked(evt);
            }
        });
        jScrollPane19.setViewportView(jTextArea18);

        jScrollPane20.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 255), null), "MSC", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jTextArea19.setEditable(false);
        jTextArea19.setColumns(20);
        jTextArea19.setRows(5);
        jTextArea19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea19MouseClicked(evt);
            }
        });
        jScrollPane20.setViewportView(jTextArea19);

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField22, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField23, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField24, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                    .addComponent(jTextField25, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                    .addComponent(jTextField26)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane18, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                    .addComponent(jScrollPane19)
                    .addComponent(jScrollPane20)))
        );

        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 0, 0)), "Registrere nye strenger", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jButton3.setText("Bygg ny streng");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton21.setText("Lagre streng");
        jButton21.setEnabled(false);

        jButton6.setText("Slett streng");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel26.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 0, 0)), "Behandle strengeforslag", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0))); // NOI18N

        jButton7.setText("Hente strengeforslag");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Akseptere forslag");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton4.setText("Forkaste forslag");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane2.addTab("Strengbehandling", jPanel19);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane2)))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Term- og strengbehandling", jPanel16);

        jTextArea8.setColumns(20);
        jTextArea8.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jTextArea8.setRows(5);
        jScrollPane9.setViewportView(jTextArea8);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 753, Short.MAX_VALUE)
            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 753, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 604, Short.MAX_VALUE)
            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Logg og meldinger", jPanel14);

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ID000000");

        jTextField2.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setEnabled(false);

        jTextField3.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField3.setEnabled(false);
        jTextField3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField3MouseClicked(evt);
            }
        });
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Definisjon", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 11))); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setEnabled(false);
        jTextArea1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTextArea1);

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Intern note", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 11))); // NOI18N

        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setEnabled(false);
        jTextArea2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel17.setText("Opprettet");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel18.setText("Endret");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel19.setText("Slettet");

        jTextField14.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        jTextField14.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField14.setEnabled(false);

        jTextField15.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        jTextField15.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField15.setEnabled(false);

        jTextField16.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        jTextField16.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField16.setEnabled(false);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(80, 80, 80)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel19))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jScrollPane4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Synonymer og se-henvisninger", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 11))); // NOI18N

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextArea3.setRows(5);
        jTextArea3.setEnabled(false);
        jTextArea3.setFocusCycleRoot(true);
        jTextArea3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea3MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTextArea3);

        jButton12.setText("-");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton14.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jButton14.setText("+");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jScrollPane5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Se ogs√•-termer", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 11))); // NOI18N

        jTextArea4.setEditable(false);
        jTextArea4.setColumns(20);
        jTextArea4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextArea4.setRows(5);
        jTextArea4.setEnabled(false);
        jTextArea4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTextArea4MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTextArea4MouseReleased(evt);
            }
        });
        jScrollPane5.setViewportView(jTextArea4);

        jButton11.setBackground(new java.awt.Color(255, 255, 255));
        jButton11.setText("+");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton13.setText("-");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 11)); // NOI18N
        jLabel6.setText("DDC");

        jTextField4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jTextField4.setEnabled(false);
        jTextField4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField4MouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 11)); // NOI18N
        jLabel7.setText("MSC");

        jTextField5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jTextField5.setEnabled(false);
        jTextField5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton11)
                            .addComponent(jButton13)))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel20Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField5)
                                    .addComponent(jTextField4))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jButton11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton13))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton12)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );

        jScrollPane6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Engelsk", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jScrollPane6.setEnabled(false);

        jTextArea5.setColumns(20);
        jTextArea5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextArea5.setRows(5);
        jTextArea5.setEnabled(false);
        jTextArea5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea5MouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jTextArea5);

        jScrollPane7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Latin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 11))); // NOI18N

        jTextArea6.setColumns(20);
        jTextArea6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextArea6.setRows(5);
        jTextArea6.setEnabled(false);
        jTextArea6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea6MouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(jTextArea6);

        jScrollPane8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nynorsk", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 11))); // NOI18N

        jTextArea7.setColumns(20);
        jTextArea7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextArea7.setRows(5);
        jTextArea7.setEnabled(false);
        jTextArea7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea7MouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(jTextArea7);

        jButton10.setText("+");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton15.setText("-");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setText("+");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setText("-");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setText("+");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setText("-");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jScrollPane10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Forkortelser og akronymer", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 11))); // NOI18N

        jTextArea9.setColumns(20);
        jTextArea9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextArea9.setRows(5);
        jTextArea9.setEnabled(false);
        jTextArea9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea9MouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(jTextArea9);

        jButton1.setText("+");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("-");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jButton9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton20.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jButton20.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(15, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(46, Short.MAX_VALUE)))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jButton10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(3, 3, 3)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jButton16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(13, 13, 13)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jButton18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(14, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                    .addContainerGap(261, Short.MAX_VALUE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Termer", jPanel4);

        jLabel9.setText("Strengen");

        jLabel15.setText("VokID");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel10.setText("Emne");

        jTextField8.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jTextField8.setEnabled(false);
        jTextField8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField8MouseClicked(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel11.setText("Underemne");

        jTextField9.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jTextField9.setEnabled(false);
        jTextField9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField9MouseClicked(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel12.setText("Sted");

        jTextField10.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jTextField10.setEnabled(false);
        jTextField10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField10MouseClicked(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel13.setText("Tid");

        jTextField11.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jTextField11.setEnabled(false);
        jTextField11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField11MouseClicked(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel14.setText("Form");

        jTextField12.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jTextField12.setEnabled(false);
        jTextField12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField12MouseClicked(evt);
            }
        });

        jLabel3.setText("MSC");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("DDC");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField10)
                            .addComponent(jTextField11)
                            .addComponent(jTextField12))))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                    .addContainerGap(95, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(321, Short.MAX_VALUE)))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel12Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel5)
                    .addContainerGap(254, Short.MAX_VALUE)))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 0, 102), new java.awt.Color(0, 0, 255)));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Behandle forslag");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel8)
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addContainerGap(98, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 0, 51), java.awt.Color.blue));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText("Slette eller bygge");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel16)
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap(156, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(128, 128, 128))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(115, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Strenger", jPanel5);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "S√∏k p√• termer", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jTextField1.setText("Ord som er i ferd med √• forsvinne: nattegraulen, bedyre, sveig, ... ikke la dem d√∏!");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jRadioButton1.setBackground(new java.awt.Color(204, 204, 204));
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Term");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton4.setBackground(new java.awt.Color(204, 204, 204));
        jRadioButton4.setText("Sted");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        jRadioButton2.setBackground(new java.awt.Color(204, 204, 204));
        jRadioButton2.setText("Form");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setBackground(new java.awt.Color(204, 204, 204));
        jRadioButton3.setText("Tid");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jRadioButton5.setBackground(new java.awt.Color(204, 204, 204));
        jRadioButton5.setText("MSC");
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(204, 0, 51));
        jLabel20.setText("jLabel20");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jRadioButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRadioButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRadioButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRadioButton5)
                    .addComponent(jLabel20))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jMenu1.setText("Fil");

        jMenuItem18.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem18.setText("Avslutt");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem18);

        jMenuBar1.add(jMenu1);

        jMenu5.setText("Omveier");

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem5.setText("Registrere ny term");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem5);

        jMenuItem9.setText("Bytt term og BF");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem9);

        jMenuItem10.setText("Sl√• sammen to termer");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem10);

        jMenuItem11.setText("Fjerne term");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem11);

        jMenuItem12.setText("Legge til MSC");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem12);

        jMenuItem13.setText("Legge til DDC");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem13);

        jMenuItem6.setText("Revidere definisjon");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem6);

        jMenuItem14.setText("Revidere intern note");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem14);

        jMenuItem42.setText("Vis endringsloggen");
        jMenuItem42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem42ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem42);

        jMenuItem46.setText("Vis termer uten engelsk");
        jMenuItem46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem46ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem46);

        jMenuBar1.add(jMenu5);

        jMenu2.setText("S√∏k");

        jMenuItem15.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_K, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem15.setText("S√∏k i katalog");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem15);

        jMenuItem47.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem47.setText("S√∏k i OKapi");
        jMenuItem47.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem47ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem47);

        jMenuItem19.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem19.setText("S√∏k emneterm");
        jMenuItem19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem19ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem19);

        jMenuItem20.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem20.setText("S√∏k stedsterm");
        jMenuItem20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem20ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem20);

        jMenuItem21.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem21.setText("S√∏k tidsterm");
        jMenuItem21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem21ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem21);

        jMenuItem22.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem22.setText("S√∏k formterm");
        jMenuItem22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem22ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem22);

        jMenuItem23.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem23.setText("S√∏k MSC");
        jMenuItem23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem23ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem23);

        jMenuItem39.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem39.setText("S√∏k p√• identifikator");
        jMenuItem39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem39ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem39);

        jMenuBar1.add(jMenu2);

        jMenu6.setText("Valg");

        jCheckBoxMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_1, java.awt.event.InputEvent.ALT_MASK));
        jCheckBoxMenuItem1.setText("Strenges√∏k");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenu6.add(jCheckBoxMenuItem1);

        jMenuItem17.setText("Velge fontfarge");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem17);

        jMenu9.setText("Velg BIBSYS-base");

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("UBO");
        jRadioButtonMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem1ActionPerformed(evt);
            }
        });
        jMenu9.add(jRadioButtonMenuItem1);

        jRadioButtonMenuItem2.setSelected(true);
        jRadioButtonMenuItem2.setText("UREAL");
        jRadioButtonMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem2ActionPerformed(evt);
            }
        });
        jMenu9.add(jRadioButtonMenuItem2);

        jRadioButtonMenuItem3.setSelected(true);
        jRadioButtonMenuItem3.setText("UBB");
        jRadioButtonMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem3ActionPerformed(evt);
            }
        });
        jMenu9.add(jRadioButtonMenuItem3);

        jRadioButtonMenuItem4.setSelected(true);
        jRadioButtonMenuItem4.setText("UBBRB");
        jRadioButtonMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem4ActionPerformed(evt);
            }
        });
        jMenu9.add(jRadioButtonMenuItem4);

        jRadioButtonMenuItem5.setSelected(true);
        jRadioButtonMenuItem5.setText("BIBSYS");
        jRadioButtonMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem5ActionPerformed(evt);
            }
        });
        jMenu9.add(jRadioButtonMenuItem5);

        jMenu6.add(jMenu9);

        jMenuBar1.add(jMenu6);

        jMenu3.setText("Eksport");

        jMenuItem2.setText("Lagre for Roald og Webs√∏k");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuItem30.setText("Lagre bare i web");
        jMenuItem30.setEnabled(false);
        jMenuItem30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem30ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem30);

        jMenuItem1.setText("XML-eksport");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuItem32.setText("CSV-eksport");
        jMenuItem32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem32ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem32);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Hjelp");

        jMenuItem38.setText("Bruksanvisning");
        jMenuItem38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem38ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem38);

        jMenuItem3.setText("Notater");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);

        jMenuItem4.setText("Versjonslogg");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem4);

        jMenuItem16.setText("Feedback");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem16);

        jMenuBar1.add(jMenu4);

        jMenu7.setText("Help");

        jMenuItem24.setText("I need somebody");
        jMenu7.add(jMenuItem24);

        jMenuItem25.setText("Help");
        jMenuItem25.setEnabled(false);
        jMenu7.add(jMenuItem25);

        jMenuItem26.setText("Not just anybody");
        jMenu7.add(jMenuItem26);

        jMenuItem27.setText("Help");
        jMenuItem27.setEnabled(false);
        jMenu7.add(jMenuItem27);

        jMenuItem28.setText("You know I need someone");
        jMenu7.add(jMenuItem28);

        jMenuItem29.setText("Help");
        jMenuItem29.setEnabled(false);
        jMenu7.add(jMenuItem29);

        jMenuBar1.add(jMenu7);

        jMenu8.setText("Knuts meny");

        jMenuItem31.setText("Ta backup");
        jMenuItem31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem31ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem31);

        jMenuItem8.setText("Lagre fra id2term");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem8);

        jMenuItem7.setText("Fil: strenger med dollar-b");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem7);

        jMenuItem33.setText("Lag ordbok (LaTeX)");
        jMenuItem33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem33ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem33);

        jMenuItem34.setText("Strenger med $b (LaTeX)");
        jMenuItem34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem34ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem34);

        jMenuItem51.setText("Vrengte strenger med $b (LaTeX)");
        jMenuItem51.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem51ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem51);

        jMenuItem35.setText("Strenger uten $b (LaTeX)");
        jMenuItem35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem35ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem35);

        jMenuItem36.setText("Engelske termer (LaTeX)");
        jMenuItem36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem36ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem36);

        jMenuItem37.setText("Norske termer med engelsk (LaTeX)");
        jMenuItem37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem37ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem37);

        jMenuItem40.setText("Norske termer uten engelsk (LaTeX)");
        jMenuItem40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem40ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem40);

        jMenuItem41.setText("Norske termer og bf og engelsk (LaTeX)");
        jMenuItem41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem41ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem41);

        jMenuItem43.setText("Norske termer avgrenset til bibkode (LaTeX)");
        jMenuItem43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem43ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem43);

        jMenuItem44.setText("Norske termer med bibkoder");
        jMenuItem44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem44ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem44);

        jMenuItem45.setText("Importer nynorsk fra GitHub");
        jMenuItem45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem45ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem45);

        jMenuItem48.setText("Importer steder for SMR");
        jMenuItem48.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem48ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem48);

        jMenuItem49.setText("Importer former for SMR");
        jMenuItem49.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem49ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem49);

        jMenuItem50.setText("Kopier engelske altlabel til bf");
        jMenuItem50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem50ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem50);

        jMenuItem52.setText("Termer med akronymer (LaTeX-tabell)");
        jMenuItem52.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem52ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem52);

        jMenuBar1.add(jMenu8);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDesktopPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        sok(jTextField1.getText());
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        settindeksterm();
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        settform();
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        setttid();
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        settsted();
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
        settmsc();
    }//GEN-LAST:event_jRadioButton5ActionPerformed

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // Dette gjelder bevegelse i trefflista opp og ned
        // her er det ikke mulig √• sende til se-ogs√•
        trefflistevalg();
    }//GEN-LAST:event_jList1ValueChanged

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        Sonja.lagreXML();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (Sonja.slettstreng(currentStreng)) {
            int pos = jList1.getSelectedIndex();
            melding("Strengen", "ble slettet og fjernet fra term! Husk √• lagre!");
            sok(jTextField1.getText());
            jList1.setSelectedIndex(Math.min(jList1.getHeight(), pos));
        } else {
            melding("Strengen", "ble IKKE slettet");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        if (Sonja.lagrealledata()) {
            melding("Lagring og backup var vellykket.", "Sjekk status i logg-fanen.");
        } else {
            melding("Lagring og backup var mislykket.", "Meld fra.");
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        if (notater != null) {
            notater.setVisible(true);
        } else {
            notater = new Hjelpevindu("notater.html");
            notater.setttittel("Sonja notater");
            notater.setVisible(true);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        if (versjonslogg != null) {
            versjonslogg.setVisible(true);
        } else {
            versjonslogg = new Hjelpevindu("versjonslogg.html");
            versjonslogg.setttittel("Sonja versjonslogg");
            versjonslogg.setVisible(true);
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        leggetilsehenvisning();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        leggetilseog();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        registrerenyterm();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        if (jCheckBoxMenuItem1.isSelected()) {
            strengesok = true;
        } else {
            strengesok = false;
        }
        sok(jTextField1.getText());
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        Sonja.strengermeddb();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        fjernesehenvisning();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        Sonja.lagrealt();
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        bytttermogbf();
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        fjerneseog();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        leggetilengelsk();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        leggetilakronym();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        fjerneakronym();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
	removeTerm(en);
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        leggetillatin();
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
	removeTerm(la);
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        leggetilnynorsk();
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
	removeTerm(nn);
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        slaasammentobegreper();
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        fjerneterm();
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        leggetilmsc();
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        leggetilddc();
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        revideredefinisjon();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        revidereinternnote();
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jTextArea5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea5MouseClicked
        leggetilengelsk();
    }//GEN-LAST:event_jTextArea5MouseClicked

    private void jTextArea6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea6MouseClicked
        leggetillatin();
    }//GEN-LAST:event_jTextArea6MouseClicked

    private void jTextArea7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea7MouseClicked
        leggetilnynorsk();
    }//GEN-LAST:event_jTextArea7MouseClicked

    private void jTextArea9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea9MouseClicked
        leggetilakronym();
    }//GEN-LAST:event_jTextArea9MouseClicked

    private void jTextArea1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea1MouseClicked
        revideredefinisjon();
    }//GEN-LAST:event_jTextArea1MouseClicked

    private void jTextArea2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea2MouseClicked
        revidereinternnote();
    }//GEN-LAST:event_jTextArea2MouseClicked

    private void jTextArea3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea3MouseClicked
        leggetilsehenvisning();
    }//GEN-LAST:event_jTextArea3MouseClicked

    private void jTextField4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField4MouseClicked
        leggetilddc();
    }//GEN-LAST:event_jTextField4MouseClicked

    private void jTextField5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField5MouseClicked
        leggetilmsc();
    }//GEN-LAST:event_jTextField5MouseClicked

    private void jTextField8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField8MouseClicked
        leggetilstrengemne();
    }//GEN-LAST:event_jTextField8MouseClicked

    private void jTextField9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField9MouseClicked
        leggetilstrengunderemne();
    }//GEN-LAST:event_jTextField9MouseClicked

    private void jTextField10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField10MouseClicked
        leggetilstrengsted();
    }//GEN-LAST:event_jTextField10MouseClicked

    private void jTextField11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField11MouseClicked
        leggetilstrengtid();
    }//GEN-LAST:event_jTextField11MouseClicked

    private void jTextField12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField12MouseClicked
        leggetilstrengform();
    }//GEN-LAST:event_jTextField12MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (strengbygg == null) {
            strengbygg = new Streng();
            tomnyttstrengskjema();
            jButton3.setText("Lagre ny streng");
        } else {

            if (!Sonja.strengfins(strengbygg)) {
                strengbygg.addID(Sonja.nesteID());
                Sonja.ordnestreng(strengbygg);
                Sonja.nystreng(strengbygg);
                Sonja.lagrelogg("ny streng " + strengbygg.toStringplain());
            } else {
                melding("Dublett", "Strengen fantes fra f√∏r.");
            }
            strengbygg = null;
            jButton3.setText("Bygge ny streng");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
// s√∏k i katalog (Oria)
        boolean ubo = jRadioButton1.isSelected() || jRadioButton1.isSelected();
        Sonja.searchoria((Term) jList1.getSelectedValue(), ubo);
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        forslag = Sonja.lesstrengeforslag();
        presenterstrengeforslag(forslag);
        aktiviserstrengeknapper(true);

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        if (feedback != null) {
            feedback.setVisible(true);
        } else {
            feedback = new Hjelpevindu("feedback.html");
            feedback.setttittel("Sonja tilbakemelding");
            feedback.setVisible(true);
        }
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
        velgfontfarge(null);
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed
        Sonja.avslutt();
    }//GEN-LAST:event_jMenuItem18ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        Sonja.avslutt();
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Sonja.avslutt();
    }//GEN-LAST:event_formWindowClosing

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        aksepterestreng();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        forkastestrengeforslag();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenuItem19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem19ActionPerformed
        settindeksterm();
    }//GEN-LAST:event_jMenuItem19ActionPerformed

    private void jMenuItem20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem20ActionPerformed
        settsted();
    }//GEN-LAST:event_jMenuItem20ActionPerformed

    private void jMenuItem21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem21ActionPerformed
        setttid();
    }//GEN-LAST:event_jMenuItem21ActionPerformed

    private void jMenuItem22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem22ActionPerformed
        settform();
    }//GEN-LAST:event_jMenuItem22ActionPerformed

    private void jMenuItem23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem23ActionPerformed
        settmsc();
    }//GEN-LAST:event_jMenuItem23ActionPerformed

    private void jMenuItem30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem30ActionPerformed
        Sonja.lagregrunnfil();
    }//GEN-LAST:event_jMenuItem30ActionPerformed

    private void jMenuItem31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem31ActionPerformed
        Sonja.backupavalledata();
    }//GEN-LAST:event_jMenuItem31ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        bestempreflabel("engelsk");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        bestempreflabel("nynorsk");
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        bestempreflabel("latin");
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jMenuItem32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem32ActionPerformed
        if (Sonja.vokabular.equals("REAL")) {
            Sonja.lagreCSV();
        } else {
            Sonja.lagreCSVsmr();
        }
    }//GEN-LAST:event_jMenuItem32ActionPerformed

    private void jMenuItem33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem33ActionPerformed
        Sonja.laglatexordbok();
    }//GEN-LAST:event_jMenuItem33ActionPerformed

    private void jMenuItem34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem34ActionPerformed
        Sonja.strengermeddblatex();
    }//GEN-LAST:event_jMenuItem34ActionPerformed

    private void jMenuItem35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem35ActionPerformed
        Sonja.strengerutendblatex();
    }//GEN-LAST:event_jMenuItem35ActionPerformed

    private void jMenuItem36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem36ActionPerformed
        Sonja.engelsketermerlatex();
    }//GEN-LAST:event_jMenuItem36ActionPerformed

    private void jMenuItem37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem37ActionPerformed
        Sonja.norskmedenengelsklatex();
    }//GEN-LAST:event_jMenuItem37ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed

    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField3MouseClicked
        revidereindeksterm();
    }//GEN-LAST:event_jTextField3MouseClicked

    private void jRadioButtonMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem1ActionPerformed
        nullstillBasemeny();
        jRadioButtonMenuItem1.setSelected(true);
        velgbaseparametre();
    }//GEN-LAST:event_jRadioButtonMenuItem1ActionPerformed

    private void jRadioButtonMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem2ActionPerformed
        nullstillBasemeny();
        jRadioButtonMenuItem2.setSelected(true);
        velgbaseparametre();
    }//GEN-LAST:event_jRadioButtonMenuItem2ActionPerformed

    private void jRadioButtonMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem3ActionPerformed
        nullstillBasemeny();
        jRadioButtonMenuItem3.setSelected(true);
        velgbaseparametre();
    }//GEN-LAST:event_jRadioButtonMenuItem3ActionPerformed

    private void jRadioButtonMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem4ActionPerformed
        nullstillBasemeny();
        jRadioButtonMenuItem4.setSelected(true);
        velgbaseparametre();
    }//GEN-LAST:event_jRadioButtonMenuItem4ActionPerformed

    private void jRadioButtonMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem5ActionPerformed
        nullstillBasemeny();
        jRadioButtonMenuItem5.setSelected(true);
        velgbaseparametre();
    }//GEN-LAST:event_jRadioButtonMenuItem5ActionPerformed

    private void jMenuItem38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem38ActionPerformed
        BrowserLaunch.openURL("http://app.uio.no/ub/emnesok/data/ureal/distribusjon/sonjadokumentasjon.pdf");
    }//GEN-LAST:event_jMenuItem38ActionPerformed

    private void jMenuItem39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem39ActionPerformed
        String svar = JOptionPane.showInputDialog("Skriv inn hele eller deler av en ID");
        sokID(svar.toUpperCase());
    }//GEN-LAST:event_jMenuItem39ActionPerformed

    private void jMenuItem40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem40ActionPerformed
        Sonja.norskutenenengelsklatex();
    }//GEN-LAST:event_jMenuItem40ActionPerformed

    private void jMenuItem42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem42ActionPerformed
        Sonja.leslogg();
    }//GEN-LAST:event_jMenuItem42ActionPerformed

    private void jTextArea4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea4MousePressed
//        if (evt.isPopupTrigger()) {
//            Feltvalgmeny fvm = new Feltvalgmeny(seogvalg, new PopoppAksjon("seog"));
//            fvm.show(evt.getComponent(), evt.getX(), evt.getY());
//        }
    }//GEN-LAST:event_jTextArea4MousePressed

    private void jTextArea4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea4MouseReleased
        if (evt.isPopupTrigger()) {
            Feltvalgmeny fvm = new Feltvalgmeny(seogvalg, new PopoppAksjon("seog"));
            fvm.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            leggetilseog();
        }
    }//GEN-LAST:event_jTextArea4MouseReleased

    private void jMenuItem41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem41ActionPerformed
        Sonja.norskmedbfogenengelsklatex();
    }//GEN-LAST:event_jMenuItem41ActionPerformed

    private void jMenuItem43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem43ActionPerformed
        Sonja.norskbibkodeavgrensetlatex();
    }//GEN-LAST:event_jMenuItem43ActionPerformed

    private void jRadioButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton6ActionPerformed
        visvalgtinfo("nynorsk", currentTerm);

    }//GEN-LAST:event_jRadioButton6ActionPerformed

    private void jRadioButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton7ActionPerformed
        visvalgtinfo("engelsk", currentTerm);
    }//GEN-LAST:event_jRadioButton7ActionPerformed

    private void jRadioButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton8ActionPerformed
        visvalgtinfo("latin", currentTerm);
    }//GEN-LAST:event_jRadioButton8ActionPerformed

    private void jRadioButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton9ActionPerformed
        visvalgtinfo("forkortelser", currentTerm);
    }//GEN-LAST:event_jRadioButton9ActionPerformed

    private void jRadioButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton10ActionPerformed
        visvalgtinfo("msc", currentTerm);
    }//GEN-LAST:event_jRadioButton10ActionPerformed

    private void jRadioButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton11ActionPerformed
        visvalgtinfo("dewey", currentTerm);
    }//GEN-LAST:event_jRadioButton11ActionPerformed

    private void jTextArea10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea10MouseClicked
        revideredefinisjon();
    }//GEN-LAST:event_jTextArea10MouseClicked

    private void jTextArea12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea12MouseClicked
        revidereinternnote();
    }//GEN-LAST:event_jTextArea12MouseClicked

    private void jTextArea11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea11MouseClicked
        if (evt.isPopupTrigger()) {
            Feltvalgmeny fvm = new Feltvalgmeny(bruktforvalg, new PopoppAksjon("bruktfor"));
            fvm.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            leggetilsehenvisning();
        }
    }//GEN-LAST:event_jTextArea11MouseClicked

    private void jTextArea15MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea15MouseReleased
        if (evt.isPopupTrigger()) {
            Feltvalgmeny fvm = new Feltvalgmeny(seogvalg, new PopoppAksjon("seog"));
            fvm.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            leggetilseog();
        }
    }//GEN-LAST:event_jTextArea15MouseReleased

    private void jTextArea11MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea11MouseReleased
        if (evt.isPopupTrigger()) {
            Feltvalgmeny fvm = new Feltvalgmeny(bruktforvalg, new PopoppAksjon("bruktfor"));
            fvm.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            leggetilsehenvisning();
        }
    }//GEN-LAST:event_jTextArea11MouseReleased

    private void jTextArea16MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea16MouseReleased
        if (evt.isPopupTrigger()) {
            Feltvalgmeny fvm = new Feltvalgmeny(multifeltvalg, new PopoppAksjon("multi"));
            fvm.show(evt.getComponent(), evt.getX(), evt.getY());
        } else if (jRadioButton6.isSelected()) {
            leggetilnynorsk();
        } else if (jRadioButton7.isSelected()) {
            leggetilengelsk();
        } else if (jRadioButton8.isSelected()) {
            leggetillatin();
        } else if (jRadioButton9.isSelected()) {
            leggetilakronym();
        } else if (jRadioButton10.isSelected()) {
            leggetilmsc();
        } else if (jRadioButton11.isSelected()) {
            leggetilddc();
        }
    }//GEN-LAST:event_jTextArea16MouseReleased

    private void jTextArea13MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea13MouseReleased
        if (evt.isPopupTrigger()) {
            Feltvalgmeny fvm = new Feltvalgmeny(overordnetvalg, new PopoppAksjon("overordnet"));
            fvm.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            leggetiloverordnet();
        }
    }//GEN-LAST:event_jTextArea13MouseReleased

    private void jTextArea14MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea14MouseReleased
        if (evt.isPopupTrigger()) {
            Feltvalgmeny fvm = new Feltvalgmeny(underordnetvalg, new PopoppAksjon("underordnet"));
            fvm.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            leggetilunderordnet();
        }
    }//GEN-LAST:event_jTextArea14MouseReleased

    private void jTextField17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField17MouseClicked
        if (!(currentTerm instanceof Streng)) {
            revidereindeksterm();
        }
    }//GEN-LAST:event_jTextField17MouseClicked

    private void jTextField22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField22MouseClicked
        if (strengbygg != null) {
            leggetilstrengemne();
        } else {
            melding("Strenger er faste",
                    "Kan ikke revidere eksisterende streng, m√• bygges p√• ny");
        }
    }//GEN-LAST:event_jTextField22MouseClicked

    private void jTextField23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField23MouseClicked
        if (strengbygg != null) {
            leggetilstrengunderemne();
        } else {
            melding("Strenger er faste",
                    "Kan ikke revidere eksisterende streng, m√• bygges p√• ny");
        }
    }//GEN-LAST:event_jTextField23MouseClicked

    private void jTextField24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField24MouseClicked
        if (strengbygg != null) {
            leggetilstrengsted();
        } else {
            melding("Strenger er faste",
                    "Kan ikke revidere eksisterende streng, m√• bygges p√• ny");
        }

    }//GEN-LAST:event_jTextField24MouseClicked

    private void jTextField25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField25MouseClicked
        if (strengbygg != null) {
            leggetilstrengtid();
        } else {
            melding("Strenger er faste",
                    "Kan ikke revidere eksisterende streng, m√• bygges p√• ny");
        }

    }//GEN-LAST:event_jTextField25MouseClicked

    private void jTextArea17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea17MouseClicked
        if (evt.isPopupTrigger()) {
            Feltvalgmeny fvm = new Feltvalgmeny(bruktforvalg, new PopoppAksjon("strengbruktfor"));
            fvm.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            leggetilstrengbruktfor();
        }
    }//GEN-LAST:event_jTextArea17MouseClicked

    private void jTextArea18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea18MouseClicked
        if (evt.isPopupTrigger()) {
            Feltvalgmeny fvm = new Feltvalgmeny(bruktforvalg, new PopoppAksjon("strengdewey"));
            fvm.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            leggetilstrengdewey();
        }

    }//GEN-LAST:event_jTextArea18MouseClicked

    private void jTextArea19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea19MouseClicked
        if (evt.isPopupTrigger()) {
            Feltvalgmeny fvm = new Feltvalgmeny(bruktforvalg, new PopoppAksjon("strengmsc"));
            fvm.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            leggetilstrengmsc();
        }
    }//GEN-LAST:event_jTextArea19MouseClicked

    private void jTextArea17MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea17MouseReleased
        if (evt.isPopupTrigger()) {
            Feltvalgmeny fvm = new Feltvalgmeny(bruktforvalg, new PopoppAksjon("strengbruktfor"));
            fvm.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            leggetilstrengbruktfor();
        }
    }//GEN-LAST:event_jTextArea17MouseReleased

    private void jList1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseReleased
        Term tmp = currentTerm;
        if (evt.getModifiersEx() == InputEvent.CTRL_DOWN_MASK) {
            if (strengbygg != null) {
                ListModel lm = jList1.getModel();
                int iv = jList1.locationToIndex(evt.getPoint());
                Term valg = (Term) lm.getElementAt(iv);
                if (listefokus.equals("term")) {
                    if (strengbygg.da == null) {
                        strengbygg.addterm(valg.minID);
                    } else {
                        strengbygg.addunderterm(valg.minID);
                    }
                } else if (listefokus.equals("form")) {
                    strengbygg.addform(valg.minID);
                } else if (listefokus.equals("tid")) {
                    strengbygg.addtid(valg.minID);
                } else if (listefokus.equals("sted")) {
                    strengbygg.addsted(valg.minID);
                }
                jTabbedPane2.setSelectedComponent(jPanel19);
                fyllnyttstrengskjema(strengbygg);
            } else if (!(currentTerm instanceof Streng)) {
                // virker bare p√• termer under currentTerm i trefflista!
                ListModel lm = jList1.getModel();
                int iv = jList1.locationToIndex(evt.getPoint());
                //System.out.println("iv= " + iv + " Point= " + evt.getPoint().toString());
                Term valg = (Term) lm.getElementAt(iv);
                if (seogfraliste) {
		    createRelated(tmp, valg);
                } else if (overordnetfraliste) {
		    createBroader(tmp, valg);
                } else if (underordnetfraliste) {
                    createBroader(valg, tmp); // broader also creates inverse
                }
                currentTerm = tmp;
                fyllnytttermskjema(currentTerm);
            }
        } else if (evt.getModifiersEx() == InputEvent.BUTTON3_DOWN_MASK) {
            //System.out.println("BUTTON3");
        } else if (evt.getModifiersEx() == InputEvent.BUTTON2_DOWN_MASK) {
            //System.out.println("BUTTON2");
        } else if (evt.getModifiersEx() == InputEvent.META_DOWN_MASK) {
            // virker bare p√• termer under currentTerm i trefflista!
            ListModel lm = jList1.getModel();
            int iv = jList1.locationToIndex(evt.getPoint());
            //System.out.println("iv= " + iv + " Point= " + evt.getPoint().toString());
            Term valg = (Term) lm.getElementAt(iv);
            if (seogfraliste) {
		createRelated(tmp, valg);
            } else if (overordnetfraliste) {
		createBroader(tmp, valg);
            } else if (underordnetfraliste) {
        	createBroader(valg, tmp); // broader also creates inverse
            }

            currentTerm = tmp;
            if (currentTerm instanceof Streng) {
                fyllnyttstrengskjema((Streng) currentTerm);
            } else if (currentTerm instanceof Term) {
                fyllnytttermskjema(currentTerm);
            }
        } else {
            if (currentTerm instanceof Streng) {
                fyllnyttstrengskjema((Streng) currentTerm);
            } else if (currentTerm instanceof Term) {
                fyllnytttermskjema(currentTerm);
            }
            seogfraliste = false;
            overordnetfraliste = false;
            underordnetfraliste = false;
        }
    }//GEN-LAST:event_jList1MouseReleased

    private void jTextField26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField26MouseClicked
        if (strengbygg != null) {
            leggetilstrengform();
        } else {
            melding("Strenger er faste",
                    "Kan ikke revidere eksisterende streng, m√• bygges p√• ny");
        }
    }//GEN-LAST:event_jTextField26MouseClicked

    private void jMenuItem44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem44ActionPerformed
        Sonja.norskbibkodeliste();
    }//GEN-LAST:event_jMenuItem44ActionPerformed

    private void jMenuItem45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem45ActionPerformed
        Sonja.importernynorsk();
    }//GEN-LAST:event_jMenuItem45ActionPerformed

    private void jMenuItem46ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem46ActionPerformed
        finnutenengelsk();
    }//GEN-LAST:event_jMenuItem46ActionPerformed

    private void jMenuItem47ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem47ActionPerformed
        Sonja.searchokapi((Term) jList1.getSelectedValue());
    }//GEN-LAST:event_jMenuItem47ActionPerformed

    private void jMenuItem48ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem48ActionPerformed
        // importere steder
        Sonja.importersteder();
    }//GEN-LAST:event_jMenuItem48ActionPerformed

    private void jMenuItem49ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem49ActionPerformed
        // TODO add your handling code here:
        Sonja.importerformer();
    }//GEN-LAST:event_jMenuItem49ActionPerformed

    private void jMenuItem50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem50ActionPerformed
        // TODO add your handling code here:
        Sonja.kopierbf();
    }//GEN-LAST:event_jMenuItem50ActionPerformed

    private void jMenuItem51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem51ActionPerformed
        // TODO add your handling code here:
        Sonja.strengermeddblatexvrengt();
    }//GEN-LAST:event_jMenuItem51ActionPerformed

    private void jMenuItem52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem52ActionPerformed
        // TODO add your handling code here:
        Sonja.termermedakronymerlatex();
    }//GEN-LAST:event_jMenuItem52ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sonjavindu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sonjavindu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sonjavindu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sonjavindu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sonjavindu().setVisible(true);
            }
        });
    }

    /**
     *
     * @param overskrift overskriften i meldingsvinduet
     * @param melding selve meldingen
     */
    public static void melding(String overskrift, String melding) {
        JOptionPane.showMessageDialog(
                null,
                overskrift + "\n"
                + melding);
    }

    public void sok(String sokebegrep) {
        Term[] treffliste = null;
        treffliste = Sonja.search(sokebegrep, listefokus);
        if (treffliste != null) {
            Arrays.sort(treffliste);
            jLabel1.setText("" + treffliste.length + " treff");
            jList1.setListData(treffliste);
            jList1.grabFocus(); // trefflistefelt
        } else {
            jList1.setListData(tomliste);
            jLabel1.setText("Ingen treff");
            sokemodus(); // s√∏kefelt
        }
        seogfraliste = false;
        aktiviserstrengeknapper(false);
    }

    public void finnutenengelsk() {
        Term[] treffliste = null;
        treffliste = Sonja.utenengelsk(listefokus);
        if (treffliste != null) {
            Arrays.sort(treffliste);
            jLabel1.setText("" + treffliste.length + " treff");
            jList1.setListData(treffliste);
            jList1.grabFocus(); // trefflistefelt
        } else {
            jList1.setListData(tomliste);
            jLabel1.setText("Ingen treff");
            sokemodus(); // s√∏kefelt
        }
        seogfraliste = false;
        aktiviserstrengeknapper(false);
    }

//    public void soksa() {
//        Term[] treffliste = null;
//        treffliste = Sonja.search(jTextField1.getText(), listefokus);
//        if (treffliste != null) {
//            Arrays.sort(treffliste);
//            jLabel1.setText("" + treffliste.length + " treff");
//            jList1.setListData(treffliste);
//            //jList1.grabFocus(); // trefflistefelt
//        } else {
//            jList1.setListData(tomliste);
//            jLabel1.setText("Ingen treff");
//            sokemodus(); // s√∏kefelt
//        }
//    }
    public void trefflistevalg() {
        Object obj = jList1.getSelectedValue();
        if (obj instanceof Streng) {
            Streng str = (Streng) obj;
            if (str != null) {
                jTabbedPane1.setSelectedComponent(jPanel16);
                jTabbedPane2.setSelectedComponent(jPanel19);
                fyllnyttstrengskjema(str);
                currentTerm = str;
            }
        } else if (obj instanceof Term) {
            Term t = (Term) obj;
            if (t != null) {
                // tomtermskjema();
                jTabbedPane1.setSelectedComponent(jPanel16);
                jTabbedPane2.setSelectedComponent(jPanel18);
                if (!(seogfraliste || overordnetfraliste || underordnetfraliste)) {
                    fyllnytttermskjema(t);
                    currentTerm = t;
                }
            } else {
                // System.out.println("Term ikke funnet i lista");
            }

        }
    }

    public void registrerenyterm() {
        // T√∏mmer f√∏rst skjemaet
        tomtermskjema();

        // ber om ny term og lager storforbokstav
        String nyterm = (String) JOptionPane.showInputDialog(
                null,
                "Oppgi ny term",
                "Registrere ny term",
                JOptionPane.QUESTION_MESSAGE);
        if (nyterm != null) {
            nyterm = Sonja.fjernmultipleblanke(nyterm);
        }
        if (nyterm != null) {
            nyterm = nyterm.trim();

            if (Sonja.sjekkterm(nyterm)) {
                // ber om termtype default er valget gjort i radioknappene
                int def = 0;
                if (jRadioButton4.isSelected()) {
                    def = 1;
                }
                if (jRadioButton3.isSelected()) {
                    def = 2;
                }
                if (jRadioButton2.isSelected()) {
                    def = 3;
                }
                String selectedValue = (String) JOptionPane.showInputDialog(null,
                        "Oppgi termtype", "Valg", JOptionPane.INFORMATION_MESSAGE, null,
                        termtyper, termtyper[def]);
                if (selectedValue != null) {
		    nyterm = Sonja.storforbokstav(nyterm);
		    final String type = selectedValue.toLowerCase();
		    
		    try (Database db = new Database();) {
			currentTerm = db.insertConcept(Sonja.vokabular, ConceptType.toEnglish(type), nyterm);
			fylltermskjema(currentTerm);
			Sonja.leggnytermiliste(currentTerm);
		    } catch (SQLException e) {
			// e.printStackTrace();
			melding("Feil ved lagring:", e.getMessage());
		    }
                }
            } else {
                kollisjon(nyterm);
            }
        }
    }

    private void settindeksterm() {
        if (jRadioButton1.isVisible()) {
            jRadioButton1.setSelected(true);
            jRadioButton2.setSelected(false);
            jRadioButton3.setSelected(false);
            jRadioButton4.setSelected(false);
            jRadioButton5.setSelected(false);
            settfokus("term");
        }
    }

    private void settform() {
        if (jRadioButton2.isVisible()) {
            jRadioButton1.setSelected(false);
            jRadioButton2.setSelected(true);
            jRadioButton3.setSelected(false);
            jRadioButton4.setSelected(false);
            jRadioButton5.setSelected(false);
            settfokus("form");
        }
    }

    private void setttid() {
        if (jRadioButton3.isVisible()) {
            jRadioButton1.setSelected(false);
            jRadioButton2.setSelected(false);
            jRadioButton3.setSelected(true);
            jRadioButton4.setSelected(false);
            jRadioButton5.setSelected(false);
            settfokus("tid");
        }
    }

    private void settsted() {
        if (jRadioButton4.isVisible()) {
            jRadioButton1.setSelected(false);
            jRadioButton2.setSelected(false);
            jRadioButton3.setSelected(false);
            jRadioButton4.setSelected(true);
            jRadioButton5.setSelected(false);
            settfokus("sted");
        }

    }

    private void settmsc() {
        if (jRadioButton5.isVisible()) {
            jRadioButton1.setSelected(false);
            jRadioButton2.setSelected(false);
            jRadioButton3.setSelected(false);
            jRadioButton4.setSelected(false);
            jRadioButton5.setSelected(true);
            settfokus("msc");
        }

    }

    public void settfokus(String type) {
        listefokus = type;
        sokemodus();
    }

    public void sokemodus() {
        jTextField1.grabFocus();
        jTextField1.selectAll();
    }

    public void fylltermskjema(Term t) {
        fyllnytttermskjema(t);
        tomtermskjema();
        if (t != null) {
            jLabel2.setText(t.minID);
            jTextField2.setText(t.type);
            jTextField3.setText(t.term);

            if (t.dewey.size() > 0) {
                jTextField4.setText(t.dewey.get(0));
            }
//            if (t.dewey != null) {
//                jTextField4.setText(t.dewey);
//            }
            if (t.msc.size() > 0) {
                jTextField5.setText(t.msc.get(0));
            }
//if (t.msc != null) {
//                jTextField5.setText(t.msc);
//            }
            if (t.definisjon != null) {
                jTextArea1.setText(t.definisjon);
            }
            if (t.note != null) {
                jTextArea2.setText(t.note);
            }
            if (t.synonymer.size() > 0) {
                jTextArea3.setText("");
                for (String s : t.synonymer) {
                    jTextArea3.append(s + "\n");
                }
            }
            if (t.seog.size() > 0) {
                jTextArea4.setText("");
                for (String s : t.seog) {
                    Term tmp = Sonja.getTerm(s);
                    jTextArea4.append(tmp.term + "\n");
                }
            }
            if (t.engelsk.size() > 0) {
                jTextArea5.setText("");
                for (String s : t.engelsk) {
                    jTextArea5.append(s + "\n");
                }
                if (t.engelsk.size() > 1) {
                    jButton5.setEnabled(true);
                } else {
                    jButton5.setEnabled(false);
                }
            } else {
                jButton5.setEnabled(false);
            }
            if (t.latin.size() > 0) {
                jTextArea6.setText("");
                for (String s : t.latin) {
                    jTextArea6.append(s + "\n");
                }
                if (t.latin.size() > 1) {
                    jButton20.setEnabled(true);
                } else {
                    jButton20.setEnabled(false);
                }
            }
            if (t.nynorsk.size() > 0) {
                jTextArea7.setText("");
                for (String s : t.nynorsk) {
                    jTextArea7.append(s + "\n");
                }
                if (t.nynorsk.size() > 1) {
                    jButton9.setEnabled(true);
                } else {
                    jButton9.setEnabled(false);
                }
            } else {
                jButton9.setEnabled(false);
            }
            if (t.akronymer.size() > 0) {
                jTextArea9.setText("");
                for (String s : t.akronymer) {
                    jTextArea9.append(s + "\n");
                }
            }
            if (t.introdato != null) {
                jTextField14.setText(t.introdato);
            }
            if (t.endredato != null) {
                jTextField15.setText(t.endredato);
            }
            if (t.slettdato != null) {
                jTextField16.setText(t.slettdato);
                jTextField17.setForeground(Color.red);
                if (t.flyttettilID != null && t.flyttettilID.length() > 0) {
                    jTextField17.setText(t.term
                            + " flyttet til " + Sonja.getTerm(t.flyttettilID));
                }
            } else {
                jTextField17.setForeground(Color.black);
            }
            currentTerm = t;
        }

    }

    public String dag(String d) {
        String retval = "";
        if (d != null && d.length() > 10) {
            retval = d.substring(0, 10);
        } else {
            retval = d;
        }
        return retval;
    }

    public void fyllnytttermskjema(Term t) {
        tomnytttermskjema();
        if (t != null) {
            jTextField18.setText(t.minID);

            jLabel22.setText(t.type);

            if (t.slettdato != null) {
                jTextField17.setFont(new Font("Courier New", Font.BOLD, 12));
            } else {
                jTextField17.setFont(new Font("Courier New", Font.BOLD, 24));                
            }
            jTextField17.setText(t.term);

            if (t.introdato != null) {
                jTextField19.setText(dag(t.introdato));
            }
            if (t.endredato != null) {
                jTextField20.setText(dag(t.endredato));
            }
            if (t.slettdato != null) {
                jTextField21.setText(dag(t.slettdato));
                jTextField17.setForeground(Color.red);
                if (t.flyttettilID != null && t.flyttettilID.length() > 0) {
                    jTextField17.setText(t.term
                            + " flyttet til " + Sonja.getTerm(t.flyttettilID));
                }
            } else {
                jTextField17.setForeground(Color.black);
            }

            if (t.definisjon != null) {
                jTextArea10.setText(t.definisjon);
            }
            if (t.synonymer.size() > 0) {
                jTextArea11.setText("");
                for (String s : t.synonymer) {
                    jTextArea11.append(s + "\n");
                }
            }
            if (t.note != null) {
                jTextArea12.setText(t.note);
            }
            // Relasjoner
            if (t.overordnet.size() > 0) {
                jTextArea13.setText("");
                for (String s : t.overordnet) {
                    Term tmp = Sonja.getTerm(s);
                    jTextArea13.append(tmp.term + "\n");
                }
            }
            if (t.underordnet.size() > 0) {
                jTextArea14.setText("");
                for (String s : t.underordnet) {
                    Term tmp = Sonja.getTerm(s);
                    jTextArea14.append(tmp.term + "\n");
                }
            }
            if (t.seog.size() > 0) {
                jTextArea15.setText("");
                for (String s : t.seog) {
                    Term tmp = Sonja.getTerm(s);
                    jTextArea15.append(tmp.term + "\n");
                }
            }
            // Spr√•klige tillegg og klassifikasjon
            // nynorsk-knapp
            if (t.nynorsk.size() > 0) {
                jRadioButton6.setEnabled(true);

            } else {
                jRadioButton6.setEnabled(false);
            }
            // engelsk-knapp
            if (t.engelsk.size() > 0) {
                jRadioButton7.setEnabled(true);
            } else {
                jRadioButton7.setEnabled(false);
            }
            // latin-knapp
            if (t.latin.size() > 0) {
                jRadioButton8.setEnabled(true);
            } else {
                jRadioButton8.setEnabled(false);

            }
            // forkortelse-knapp
            if (t.akronymer.size() > 0) {
                jRadioButton9.setEnabled(true);
            } else {
                jRadioButton9.setEnabled(false);
            }
            // msc-knapp
            if (t.msc.size() > 0) {
                jRadioButton10.setEnabled(true);
            } else {
                jRadioButton10.setEnabled(false);
            }
            // dewey-knapp
            if (t.dewey.size() > 0) {
                jRadioButton11.setEnabled(true);
            } else {
                jRadioButton11.setEnabled(false);
            }

            // Bestemmer hvilke opplysninger som skal vises
            if (jRadioButton6.isEnabled()) {
                visvalgtinfo("nynorsk", t);
            } else if (jRadioButton7.isEnabled()) {
                visvalgtinfo("engelsk", t);
            } else if (jRadioButton8.isEnabled()) {
                visvalgtinfo("latin", t);
            } else if (jRadioButton9.isEnabled()) {
                visvalgtinfo("forkortelser", t);
            } else if (jRadioButton10.isEnabled()) {
                visvalgtinfo("msc", t);
            } else if (jRadioButton11.isEnabled()) {
                visvalgtinfo("dewey", t);
            }

            currentTerm = t;
        }

    }

    public void visvalgtinfo(String valg, Term t) {
        if (valg != null) {
            jRadioButton6.setSelected(false);
            jRadioButton7.setSelected(false);
            jRadioButton8.setSelected(false);
            jRadioButton9.setSelected(false);
            jRadioButton10.setSelected(false);
            jRadioButton11.setSelected(false);

            if (valg.equalsIgnoreCase("nynorsk")) {
                jTextArea16.setText("");
                for (String s : t.nynorsk) {
                    jTextArea16.append(s + "\n");
                }
                jRadioButton6.setSelected(true);
            }
            if (valg.equalsIgnoreCase("engelsk")) {
                jTextArea16.setText("");
                for (String s : t.engelsk) {
                    jTextArea16.append(s + "\n");
                }
                jRadioButton7.setSelected(true);
            }
            if (valg.equalsIgnoreCase("latin")) {
                jTextArea16.setText("");
                for (String s : t.latin) {
                    jTextArea16.append(s + "\n");
                }
                jRadioButton8.setSelected(true);
            }
            if (valg.equalsIgnoreCase("forkortelser")) {
                jTextArea16.setText("");
                for (String s : t.akronymer) {
                    jTextArea16.append(s + "\n");
                }
                jRadioButton9.setSelected(true);
            }

            if (valg.equalsIgnoreCase("msc")) {
                jTextArea16.setText("");
                for (String m : t.msc) {
                    jTextArea16.append(m + "\n");
                }
                jRadioButton10.setSelected(true);
            }
            if (valg.equalsIgnoreCase("dewey")) {
                jTextArea16.setText("");
                for (String d : t.dewey) {
                    jTextArea16.append(d + "\n");
                }
                jRadioButton11.setSelected(true);
            }
        }
    }

    public void aktiviserstrengeknapper(boolean vis) {
        jButton4.setEnabled(vis);
        jButton8.setEnabled(vis);
    }

    public void tomtermskjema() {
        jLabel2.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField14.setText("");
        jTextField15.setText("");
        jTextField16.setText("");
        jTextArea1.setText("");
        jTextArea2.setText("");
        jTextArea3.setText("");
        jTextArea4.setText("");
        jTextArea5.setText("");
        jTextArea6.setText("");
        jTextArea7.setText("");
        jTextArea9.setText("");
        //currentTerm = null;
    }

    public void tomnytttermskjema() {
        jLabel2.setText("");
        jTextField17.setText(""); //term
        jTextField18.setText(""); //id
        jTextField19.setText(""); //nydato
        jTextField20.setText(""); //endretdato
        jTextField21.setText(""); // slettetdato
        jTextArea10.setText(""); // definisjon
        jTextArea11.setText(""); // se-hit
        jTextArea12.setText(""); // internnote
        jTextArea13.setText(""); // overordnet
        jTextArea14.setText(""); // underordnet
        jTextArea15.setText(""); // se-ogs√•
        jTextArea16.setText(""); // nynorsk, engelsk etc
        //currentTerm = null;
    }

    public void tomstrengskjema() {
        jLabel15.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        jTextField9.setText("");
        jTextField10.setText("");
        jTextField11.setText("");
        jTextField12.setText("");
        jTextField13.setText("");
        currentStreng = null;
    }

    public void tomnyttstrengskjema() {
        jLabel22.setText("");
        jLabel23.setText("");
        jTextField17.setText("");
        jTextField18.setText("");
        jTextField19.setText("");
        jTextField20.setText("");
        jTextField21.setText("");
        jTextField22.setText("");
        jTextField23.setText("");
        jTextField24.setText("");
        jTextField25.setText("");
        jTextField26.setText("");
        jTextArea17.setText("");
        jTextArea18.setText("");
        jTextArea19.setText("");
        currentStreng = null;
    }

//    public void fyllstrengskjema(Streng s) {
//        fyllnyttstrengskjema(s);
//        currentStreng = s;
//        jLabel15.setText("(" + s.minID + ")");
//        jTextField7.setText(s.toString());
//        if (!s.bruker.equals("")) {
//            jLabel5.setText("Forslagsstiller: " + s.bruker);
//        } else {
//            jLabel5.setText(s.bruker);
//        }
//        if (s.strengtype == null) {
//            if (s.da != null) {
//                s.strengtype = Sonja.gettype(s.da);
//            } else {
//                s.strengtype = "";
//            }
//        }
//        if (s.da != null) {
//            if (s.strengtype.equals("term")) {
//                jTextField8.setText(Sonja.getTerm(s.da).term);
//            } else if (s.strengtype.equals("sted")) {
//                jTextField10.setText(Sonja.getTerm(s.da).term);
//            }
//        }
//        if (s.db != null) {
//            jTextField9.setText(Sonja.getTerm(s.db).term);
//        }
//        if (s.sted != null) {
//            jTextField10.setText(Sonja.getTerm(s.sted).term);
//        }
//        if (s.tid != null) {
//            jTextField11.setText(Sonja.getTerm(s.tid).term);
//        }
//        if (s.form != null) {
//            jTextField12.setText(Sonja.getTerm(s.form).term);
//        }
//
//        if (s.msc.size() > 0) {
//            jTextField6.setText(s.msc.get(0));
//        }
////        if (s.msc != null) {
////            jTextField6.setText(s.msc);
////        }
//        if (s.dewey.size() > 0) {
//            jTextField13.setText(s.dewey.get(0));
//        }
////        if (s.dewey != null) {
////            jTextField13.setText(s.dewey);
////        }
//    }
    public void fyllnyttstrengskjema(Streng s) {
        tomnyttstrengskjema();

        currentStreng = s;
        jLabel22.setText("streng");
        jTextField17.setText(s.toString());
        jTextField18.setText(s.minID);

        if (s.introdato != null) {
            jTextField19.setText(dag(s.introdato));
        }
        if (s.endredato != null) {
            jTextField20.setText(dag(s.endredato));
        }
        if (s.slettdato != null) {
            jTextField21.setText(dag(s.slettdato));
        }

        String brukerogid = null;
        if (!s.bruker.equals("")) {
            brukerogid = "Forslagsstiller: " + s.bruker;
        } else {
            brukerogid = s.bruker;
        }

        if (s.almaid != null) {
            brukerogid = brukerogid + " / " + s.almaid;
        }
        if (brukerogid != null) {
            jLabel23.setText(brukerogid);
        } else {
            jLabel23.setText("");
        }
        if (s.strengtype == null) {
            if (s.da != null) {
                s.strengtype = Sonja.gettype(s.da);
            } else {
                s.strengtype = "";
            }
        }
        if (s.da != null) {
            if (s.strengtype.equals("term")) {
                jTextField22.setText(Sonja.getTerm(s.da).term);
            } else if (s.strengtype.equals("sted")) {
                jTextField24.setText(Sonja.getTerm(s.da).term);
            }
        }
        if (s.db != null) {
            jTextField23.setText(Sonja.getTerm(s.db).term);
        }
        if (s.sted != null) {
            jTextField24.setText(Sonja.getTerm(s.sted).term);
        }
        if (s.tid != null) {
            jTextField25.setText(Sonja.getTerm(s.tid).term);
        }
        if (s.form != null) {
            jTextField26.setText(Sonja.getTerm(s.form).term);
        }
        if (s.bruktfor.size() > 0) {
            jTextArea17.setText("");
            for (int i = 0; i < s.bruktfor.size(); i++) {
                jTextArea17.append(s.bruktfor.get(i) + "\n");
            }
        }
        if (s.msc.size() > 0) {
            jTextArea19.setText("");
            for (int i = 0; i < s.msc.size(); i++) {
                jTextArea19.append(s.msc.get(i) + "\n");
            }
        }
//        if (s.msc != null) {
//            jTextField6.setText(s.msc);
//        }
        if (s.dewey.size() > 0) {
            jTextArea18.setText("");
            for (int i = 0; i < s.dewey.size(); i++) {
                jTextArea18.append(s.dewey.get(i) + "\n");
            }
        }

//        if (s.dewey != null) {
//            jTextField13.setText(s.dewey);
//        }
    }

    public void addtologg(String tekst, boolean vistab) {
        jTextArea8.append(tekst + "\n");
        if (vistab) {
            jTabbedPane1.setSelectedComponent(jPanel14);
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem22;
    private javax.swing.JMenuItem jMenuItem23;
    private javax.swing.JMenuItem jMenuItem24;
    private javax.swing.JMenuItem jMenuItem25;
    private javax.swing.JMenuItem jMenuItem26;
    private javax.swing.JMenuItem jMenuItem27;
    private javax.swing.JMenuItem jMenuItem28;
    private javax.swing.JMenuItem jMenuItem29;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem30;
    private javax.swing.JMenuItem jMenuItem31;
    private javax.swing.JMenuItem jMenuItem32;
    private javax.swing.JMenuItem jMenuItem33;
    private javax.swing.JMenuItem jMenuItem34;
    private javax.swing.JMenuItem jMenuItem35;
    private javax.swing.JMenuItem jMenuItem36;
    private javax.swing.JMenuItem jMenuItem37;
    private javax.swing.JMenuItem jMenuItem38;
    private javax.swing.JMenuItem jMenuItem39;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem40;
    private javax.swing.JMenuItem jMenuItem41;
    private javax.swing.JMenuItem jMenuItem42;
    private javax.swing.JMenuItem jMenuItem43;
    private javax.swing.JMenuItem jMenuItem44;
    private javax.swing.JMenuItem jMenuItem45;
    private javax.swing.JMenuItem jMenuItem46;
    private javax.swing.JMenuItem jMenuItem47;
    private javax.swing.JMenuItem jMenuItem48;
    private javax.swing.JMenuItem jMenuItem49;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem50;
    private javax.swing.JMenuItem jMenuItem51;
    private javax.swing.JMenuItem jMenuItem52;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton10;
    private javax.swing.JRadioButton jRadioButton11;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JRadioButton jRadioButton8;
    private javax.swing.JRadioButton jRadioButton9;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem3;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem4;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea10;
    private javax.swing.JTextArea jTextArea11;
    private javax.swing.JTextArea jTextArea12;
    private javax.swing.JTextArea jTextArea13;
    private javax.swing.JTextArea jTextArea14;
    private javax.swing.JTextArea jTextArea15;
    private javax.swing.JTextArea jTextArea16;
    private javax.swing.JTextArea jTextArea17;
    private javax.swing.JTextArea jTextArea18;
    private javax.swing.JTextArea jTextArea19;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JTextArea jTextArea6;
    private javax.swing.JTextArea jTextArea7;
    private javax.swing.JTextArea jTextArea8;
    private javax.swing.JTextArea jTextArea9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JTextField jTextField26;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables

    public void lagreterm() {
        Term t = new Term();
        boolean ernyterm = false;
        // samle opp og sjekke hvert enkelt felt
        String id = jLabel2.getText();
        if (id == null || id.equals("")) {
            ernyterm = true;
        }
        // sjekke termtype
        if (!Sonja.korrekttermtype(jTextField2.getText())) {
            melding("Feil termtype",
                    "Termtypen m√• v√¶re en av disse:\n"
                    + "term, form, tid, sted\n"
                    + "store/sm√• bokstaver likegyldig.");
        }
        // Sjekke om termen fins som term/form/tid/sted/synonym fra f√∏r
        Term[] liste = Sonja.finsfratidligere(jTextField3.getText());
        if (liste != null) {
            Term t1 = liste[0];
            melding("Fins fra f√∏r", "\"" + t1.term + "\"" + " er " + t1.type);
        }

    }

    public void leggetilsehenvisning() {
        if (currentTerm != null) {
            // henter se-henvisning fra bruker
            String nyttsynonym = (String) JOptionPane.showInputDialog(null,
                    "Oppgi ny se-henvisning",
                    "Legge til se-henvisning",
                    JOptionPane.QUESTION_MESSAGE);
            if (nyttsynonym != null) {
                nyttsynonym = Sonja.fjernmultipleblanke(nyttsynonym);

                // sjekker om se-henvisning fins fra f√∏r p√• noen m√•te
                if (!nyttsynonym.equalsIgnoreCase(currentTerm.term)) {
		    if (Sonja.sjekkterm(nyttsynonym)) {
			final String lexicalValue = Sonja.storforbokstav(nyttsynonym);

			try (Database db = new Database()) {
			    db.addTerm(currentTerm, lexicalValue, non_pref, Sonja.getDefaultLanguage());
			    currentTerm.nyttsynonym(lexicalValue);
			    endringsrutiner(currentTerm.term + " har f√•tt ny sehenvisning " + lexicalValue, currentTerm);
			} catch (SQLException e) {
			    melding("Feil ved lagring:", e.getMessage());
			    // e.printStackTrace();
			}

			fylltermskjema(currentTerm);
		    } else {
                        kollisjon(nyttsynonym);
                    }
                } else {
                    melding("Ha!", "Ikke pr√∏v deg!");
                }
            }
        }
    }

    public void kollisjon(String str) {
        melding("Betegnelsen fins fra f√∏r i en eller annen form. ", "Tast retur og sjekk s√∏ket i oppgitt termtype.");
        jTextField1.setText("=" + str + "=");
        if (Sonja.trefflistetype.equalsIgnoreCase("term")) {
            settindeksterm();
        } else if (Sonja.trefflistetype.equalsIgnoreCase("sted")) {
            settsted();
        } else if (Sonja.trefflistetype.equalsIgnoreCase("tid")) {
            setttid();
        } else if (Sonja.trefflistetype.equalsIgnoreCase("form")) {
            settform();
        }

    }

    public void fjernesehenvisning() {
        if (currentTerm != null) {
            int seantall = currentTerm.synonymer.size();
            // fins det noen i det hele tatt
            if (seantall > 0) {
                String mld = null;
                if (seantall == 1) {
                    // fins det bare en
                    mld = removeSynonym(currentTerm.synonymer.get(0));
                } else {
                    // fins det flere
                    String[] seliste = new String[seantall];
                    for (int i = 0; i < seantall; i++) {
                        seliste[i] = currentTerm.synonymer.get(i);
                    }
                    String selectedValue = (String) JOptionPane.showInputDialog(null,
                            "Velg BF som skal fjernes", "Rette henvisninger",
                            JOptionPane.INFORMATION_MESSAGE, null,
                            seliste, seliste[0]);
                    if (selectedValue != null) {
			mld = removeSynonym(selectedValue);
                    }
                }
                if (mld != null) {
                    endringsrutiner(mld, currentTerm);
                }

            }
        }
    }

    private String removeSynonym(String lexicalValue) {
	String mld = null;

	try (Database db = new Database()) {
	    db.removeTerm(currentTerm, lexicalValue, Sonja.getDefaultLanguage());
	    currentTerm.fjernsehenvisning(lexicalValue);
	    currentTerm.endret();
	    mld = lexicalValue + " fjernet som synonym fra " + currentTerm.term;
	} catch (SQLException e) {
	    melding("Feil ved lagring:", e.getMessage());
	}
	return mld;
    }

    public void leggetilseog() {
        if (currentTerm != null) {
            String saterm = JOptionPane.showInputDialog("Skriv inn se-ogs√•-term");
            if (saterm != null) {
                saterm = Sonja.fjernmultipleblanke(saterm);
            }
            if (saterm != null) {
                saterm = Sonja.storforbokstav(saterm.trim());
                if (!saterm.equalsIgnoreCase(currentTerm.term)) {
                    jTextField1.setText(saterm);
                    sok(jTextField1.getText());
                    if (jList1.getModel().getSize() == 0) {
                        int svar = JOptionPane.showConfirmDialog(null,
                                "Skal programmet legge inn termen som ny term?",
                                "Ukjent term", JOptionPane.YES_NO_OPTION);
                        if (svar == JOptionPane.YES_OPTION) {
			    try (Database db = new Database()) {
				Term newterm = db.insertConcept(Sonja.vokabular, ConceptType.toEnglish(currentTerm.type), saterm);
				Sonja.leggnytermiliste(newterm);
				createRelated(currentTerm, newterm);
			    } catch (SQLException e) {
				melding("Feil ved lagring:", e.getMessage());
			    }
                        }
                    } else if (jList1.getModel().getSize() == 1) {
                        melding("Ett treff", "Legges til se-ogs√•-lista");
                        ListModel lm = jList1.getModel();
                        Term valg = (Term) lm.getElementAt(0);
                        
			createRelated(currentTerm, valg);
                    } else {
                        melding("Flere treff", "Velg med Ctrl-klikk ");
                        seogfraliste = true;
                    }
                } else {
                    melding("Ha!", "Ikke pr√∏v deg!");
                }
            }
        }
    }

    private void createRelated(Term concept1, Term concept2) {
	try (Database db = new Database()) {
	    db.addRelation(concept1, concept2, related);
	    concept1.nyseog(concept2.minID);
	    endringsrutiner(concept1.term + " har f√•tt ny se ogs√• term " + concept2.term, currentTerm);
	    Sonja.sjekkinversseog(concept1.minID, concept2.minID);
	    fylltermskjema(concept1);
	} catch (SQLException e) {
	    melding("Feil ved lagring:", e.getMessage());
	}
    }
    
    private void removeRelated(Term concept1, Term concept2) {
	try (Database db = new Database()) {
	    db.removeRelation(concept1, concept2, related);
	    concept1.fjernso(concept2.minID);
	    endringsrutiner(concept2.term + " fjernet som se-ogs√• fra " + concept1.term, currentTerm);

	    if (concept2.harseog(concept1.minID)) {
		int svar = JOptionPane.showConfirmDialog(null,
			"Skal programmet fjerne invers se ogs√•-relasjon?",
			"Invers relasjon", JOptionPane.YES_NO_OPTION);
		if (svar == JOptionPane.YES_OPTION) {
		    db.removeRelation(concept2, concept1, related);
		    concept2.fjernso(concept1.minID);
		    endringsrutiner(concept1.term + " fjernet som se-ogs√• fra " + concept2.term, currentTerm);
		}
	    }

	    fylltermskjema(concept1);
	} catch (SQLException e) {
	    melding("Feil ved lagring:", e.getMessage());
	}
    }

    public void leggetiloverordnet() {
        if (currentTerm != null) {
            String otterm = JOptionPane.showInputDialog("Skriv inn overordnet term");
            if (otterm != null) {
                otterm = Sonja.fjernmultipleblanke(otterm);
            }
            if (otterm != null) {
                otterm = Sonja.storforbokstav(otterm.trim());
                if (!otterm.equalsIgnoreCase(currentTerm.term)) {
                    jTextField1.setText(otterm);
                    sok(jTextField1.getText());
                    if (jList1.getModel().getSize() == 0) {
                        int svar = JOptionPane.showConfirmDialog(null,
                                "Skal programmet legge inn termen som ny term?",
                                "Ukjent overordnet term", JOptionPane.YES_NO_OPTION);
                        if (svar == JOptionPane.YES_OPTION) {
			    try (Database db = new Database()) {
				Term newterm = db.insertConcept(Sonja.vokabular, ConceptType.toEnglish(currentTerm.type), otterm);
				Term tmp = currentTerm;
				Sonja.leggnytermiliste(newterm);
				currentTerm = tmp;

				createBroader(currentTerm, newterm);
			    } catch (SQLException e) {
				melding("Feil ved lagring:", e.getMessage());
			    }
                        }
                    } else if (jList1.getModel().getSize() == 1) {
                        // m√• i det minste sjekke om den allerede fins som undeordnet
                        melding("Ett treff", "Legges til overordnet-lista");
                        ListModel lm = jList1.getModel();
                        Term valg = (Term) lm.getElementAt(0);
                        if (!currentTerm.harut(valg.minID)) {
			    createBroader(currentTerm, valg);
                        } else {
                            melding("Inkonsistens", "Termen fins som underordnet\nog kan ikke legges inn som overordnet");
                        }
                    } else {
                        melding("Flere treff", "Velg med Ctrl-klikk ");
                        overordnetfraliste = true;
                    }
                } else {
                    melding("Ha!", "Ikke pr√∏v deg!");
                }
            }
        }
    }

    private void createBroader(Term concept1, Term concept2) {
	try (Database db = new Database()) {
	    db.addRelation(concept1, concept2, broader);
	    concept1.nyoverordnet(concept2.minID);
	    concept2.nyunderordnet(concept1.minID); // inverse
	    endringsrutiner(concept1.term + " har f√•tt ny overordnet term " + concept2.term, currentTerm);
	    // Sonja.sjekkinversot(currentTerm.minID, newterm.minID);
	    // fylltermskjema(currentTerm);
	} catch (SQLException e) {
	    melding("Feil ved lagring:", e.getMessage());
	}
    }

    public void leggetilunderordnet() {
        if (currentTerm != null) {
            String utterm = JOptionPane.showInputDialog("Skriv inn underordnet term");
            if (utterm != null) {
                utterm = Sonja.fjernmultipleblanke(utterm);
            }
            if (utterm != null) {
                utterm = Sonja.storforbokstav(utterm.trim());
                if (!utterm.equalsIgnoreCase(currentTerm.term)) {
                    jTextField1.setText(utterm);
                    sok(jTextField1.getText());
                    if (jList1.getModel().getSize() == 0) {
                        int svar = JOptionPane.showConfirmDialog(null,
                                "Skal programmet legge inn termen som ny term?",
                                "Ukjent underordnet term", JOptionPane.YES_NO_OPTION);
                        if (svar == JOptionPane.YES_OPTION) {
                            try (Database db = new Database()) {
				Term newterm = db.insertConcept(Sonja.vokabular, ConceptType.toEnglish(currentTerm.type), utterm);
				Term tmp = currentTerm;
				Sonja.leggnytermiliste(newterm);
				currentTerm = tmp;

				createBroader(newterm, currentTerm); // broader also creates inverse
			    } catch (SQLException e) {
				melding("Feil ved lagring:", e.getMessage());
			    }
                        }
                    } else if (jList1.getModel().getSize() == 1) {
                        // m√• i det minste sjekke om den allerede fins som overordnet
                        melding("Ett treff", "Legges til underordnet-lista");
                        ListModel lm = jList1.getModel();
                        Term valg = (Term) lm.getElementAt(0);
                        if (!currentTerm.harot(valg.minID)) {
			    createBroader(valg, currentTerm); // broader also creates inverse
                        } else {
                            melding("Inkonsistens", "Termen fins som overordnet\nog kan ikke legges inn som underordnet");
                        }
                    } else {
                        melding("Flere treff", "Velg med Ctrl-klikk ");
                        underordnetfraliste = true;
                    }
                } else {
                    melding("Ha!", "Ikke pr√∏v deg!");
                }
            }
        }
    }

    private void bytttermogbf() {
        String fra = null;
        String til = null;

        if (currentTerm != null) {
            fra = currentTerm.term;
            int seantall = currentTerm.synonymer.size();
            if (seantall > 0) {
                if (seantall == 1) {

                    String tmp = currentTerm.synonymer.get(0);
                    String tmpid = Sonja.getID(tmp);
                    if (tmpid == null) {
                        til = tmp;
			setPreferred(currentTerm, fra, til);
                    } else {
                        Term t = Sonja.getTerm(tmpid);
                        if (t.slettdato == null) {
                            melding("Finn p√• noe annet",
                                    "Den valgte BF-termen fins som indeksterm fra f√∏r");
                        } else {
                            t.slettdato = null;
                            til = tmp;
                            setPreferred(currentTerm, fra, til);
                        }
                    }
                } else {
                    // fins det flere
                    String[] seliste = new String[seantall];
                    for (int i = 0; i < seantall; i++) {
                        seliste[i] = currentTerm.synonymer.get(i);
                    }
                    String selectedValue = (String) JOptionPane.showInputDialog(null,
                            "Velg BF-term", "Bytting",
                            JOptionPane.INFORMATION_MESSAGE, null,
                            seliste, seliste[0]);
                    if (selectedValue != null) {
                        // TODO her m√• det sjekkes om den fins som indeksterm fra f√∏r!
                        String tmpid = Sonja.getID(selectedValue);

                        if (tmpid == null) {
                            setPreferred(currentTerm, fra, selectedValue);
                        } else {
                            Term t = Sonja.getTerm(tmpid);
                            if (t.slettdato == null) {
                                melding("Finn p√• noe annet",
                                        "Den valgte BF-termen fins som indeksterm fra f√∏r!!!");
                            } else {
                                t.slettdato = null;
                                setPreferred(currentTerm, fra, selectedValue);
                            }
                        }
                    }
                }
            }
        }

    }

    private void setPreferred(Term concept, String fra, String til) {
	try (Database db = new Database()) {
	    db.setPreferred(concept, fra, til, Sonja.getDefaultLanguage());
	    concept.fjernsehenvisning(til);
	    concept.synonymer.add(concept.term);
	    concept.term = til;

	    // Sonja.lokar(fra, til);
	    Sonja.lokarbytt(concept.type, fra, til, concept.minID);
	    // Sonja.bibsyshuskeliste.add(mld);
	    vindu.addtologg(concept.type + ": " + fra + " m√• endres til " + til, false);
	    endringsrutiner(concept.type + ": " + fra + " er endret til " + til, currentTerm);

	    // fylltermskjema(currentTerm);
	} catch (SQLException e) {
	    melding("Feil ved lagring:", e.getMessage());
	}
    }

    public void fjerneoverordnet() {
        if (currentTerm != null) {
            int otantall = currentTerm.overordnet.size();
            if (otantall > 0) {
                if (otantall == 1) {
                    String idbort = currentTerm.overordnet.get(0);
                    Term tmp = Sonja.getTerm(idbort);
                    if (tmp != null) {
                        removeBroader(currentTerm, tmp);
                    }
                } else {
                    // fins det flere
                    String[] otliste = new String[otantall];
                    for (int i = 0; i < otantall; i++) {
                        otliste[i] = Sonja.getTerm(currentTerm.overordnet.get(i)).term;
                    }
                    String selectedValue = (String) JOptionPane.showInputDialog(null,
                            "Velg OT som skal fjernes", "OT-relasjon",
                            JOptionPane.INFORMATION_MESSAGE, null,
                            otliste, otliste[0]);
                    if (selectedValue != null) {
                        String idbort = Sonja.getID(selectedValue);
                        Term tmp = Sonja.getTerm(idbort);
                        if (tmp != null) {
                            removeBroader(currentTerm, tmp);
                        }
                    }
                }
            }
        }
    }
    
    private void removeBroader(Term concept1, Term concept2) {
	try (Database db = new Database()) {
	    db.removeRelation(concept1, concept2, broader);
	    concept1.fjernot(concept2.minID);
	    concept2.fjernut(concept1.minID); // inverse
	    endringsrutiner(concept1.term + " fjernet som overordnet fra " + concept2.term, currentTerm);
	} catch (SQLException e) {
	    melding("Feil ved lagring:", e.getMessage());
	}
    }

    public void fjerneunderordnet() {
        if (currentTerm != null) {
            int utantall = currentTerm.underordnet.size();
            if (utantall > 0) {
                if (utantall == 1) {
                    String idbort = currentTerm.underordnet.get(0);
                    Term tmp = Sonja.getTerm(idbort);
                    if (tmp != null) {
                        removeBroader(tmp, currentTerm);
                    }
                } else {
                    // fins det flere
                    String[] utliste = new String[utantall];
                    for (int i = 0; i < utantall; i++) {
                        utliste[i] = Sonja.getTerm(currentTerm.underordnet.get(i)).term;
                    }
                    String selectedValue = (String) JOptionPane.showInputDialog(null,
                            "Velg UT som skal fjernes", "OT-relasjon",
                            JOptionPane.INFORMATION_MESSAGE, null,
                            utliste, utliste[0]);
                    if (selectedValue != null) {
                        String idbort = Sonja.getID(selectedValue);
                        Term tmp = Sonja.getTerm(idbort);
                        if (tmp != null) {
                            removeBroader(tmp, currentTerm);
                        }
                    }
                }
            }
        }
    }

    public void fjerneseog() {
        if (currentTerm != null) {
            int seogantall = currentTerm.seog.size();
            if (seogantall > 0) {
                if (seogantall == 1) {
                    String idbort = currentTerm.seog.get(0);
                    Term tmp = Sonja.getTerm(idbort);
                    if (tmp != null) {
                        removeRelated(currentTerm, tmp);
                    }
                } else {
                    // fins det flere
                    String[] seogliste = new String[seogantall];
                    for (int i = 0; i < seogantall; i++) {
                        seogliste[i] = Sonja.getTerm(currentTerm.seog.get(i)).term;
                    }
                    String selectedValue = (String) JOptionPane.showInputDialog(null,
                            "Velg SO som skal fjernes", "Se ogs√•-relasjon",
                            JOptionPane.INFORMATION_MESSAGE, null,
                            seogliste, seogliste[0]);
                    if (selectedValue != null) {
                        String idbort = Sonja.getID(selectedValue);
                        Term tmp = Sonja.getTerm(idbort);
                        if (tmp != null) {
                            removeRelated(currentTerm, tmp);
                        }
                    }
                }
            }
        }
    }

    public void leggetilengelsk() {
        if (currentTerm != null) {
            // henter ny term fra bruker
            String nyengelsk = (String) JOptionPane.showInputDialog(null,
                    "Oppgi ny engelsk term",
                    "Legge til engelsk",
                    JOptionPane.QUESTION_MESSAGE);
            nyengelsk = Sonja.storforbokstav(Sonja.fjernmultipleblanke(nyengelsk));
	    if (nyengelsk != null) {
		boolean success = false;
		
		if (currentTerm.harengelsk()) {
		    success = addTerm(currentTerm, nyengelsk, non_pref, en);
		} else {
		    success = addTerm(currentTerm, nyengelsk, preferred, en);
		}
		
		if (success) {
		    currentTerm.nyengelsk(nyengelsk);
		    endringsrutiner(currentTerm.term + " har f√•tt engelsktermen " + nyengelsk, currentTerm);
		    visvalgtinfo("engelsk", currentTerm);
		    jRadioButton7.setEnabled(true);
		}
	    }
        }
    }

    private boolean addTerm(Term concept, String term, TermStatus status, Locale locale) {
	try (Database db = new Database()) {
	    db.addTerm(concept, term, status, locale);
	    return true;
	} catch (SQLException e) {
	    melding("Feil ved lagring:", e.getMessage());
	    return false;
	}
    }
    
    private void removeTerm(Term concept, String lexicalValue, Locale locale) {
	try (Database db = new Database()) {
	    List<String> terms = concept.getTerms(locale);

	    if (concept.isPreferred(lexicalValue, locale) && terms.size() > 1) {// must promote a non_pref term
		db.setPreferred(concept, lexicalValue, terms.get(1), locale);
	    }

	    db.removeTerm(concept, lexicalValue, locale);
	    terms.remove(lexicalValue);
	    endringsrutiner("fjernet " + locale + " " + lexicalValue + " i " + currentTerm.term, currentTerm);
	} catch (SQLException e) {
	    melding("Feil ved lagring:", e.getMessage());
	}
    }

    public void removeTerm(Locale locale) {
        if (currentTerm != null) {
            List<String> terms = currentTerm.getTerms(locale);
            int antall = terms.size();
            // fins det noen i det hele tatt
            if (antall > 0) {
                if (antall == 1) {
                    // fins det bare en
		    removeTerm(currentTerm, currentTerm.getTerms(locale).get(0), locale);
                } else {
                    // fins det flere
		    String[] liste = terms.toArray(new String[antall]);
                    String selectedValue = (String) JOptionPane.showInputDialog(null,
                            "Velg term som skal fjernes", "Fjerne term",
                            JOptionPane.INFORMATION_MESSAGE, null,
                            liste, liste[0]);
                    if (selectedValue != null) {
                	removeTerm(currentTerm, selectedValue, locale);
                    }
                }
//
//		if (currentTerm.engelsk.size() > 0) {
//		    visvalgtinfo("engelsk", currentTerm);
//		}
            }
        }
    }

    public void leggetilnynorsk() {
        if (currentTerm != null) {
            // henter ny term fra bruker
            String nyterm = (String) JOptionPane.showInputDialog(null,
                    "Oppgi ny nynorsk term",
                    "Legge til nynorsk",
                    JOptionPane.QUESTION_MESSAGE);

            nyterm = Sonja.fjernmultipleblanke(nyterm);

            // sjekker om strengen fins fra f√∏r p√• noen m√•te
            if (nyterm != null) {
                currentTerm.nynynorsk(Sonja.storforbokstav(nyterm));
                endringsrutiner(currentTerm.term + " har f√•tt nynorsktermen " + nyterm, currentTerm);
                visvalgtinfo("nynorsk", currentTerm);
                jRadioButton6.setEnabled(true);
            }
        }
    }

    public void leggetillatin() {
        if (currentTerm != null) {
            // henter ny term fra bruker
            String nyterm = (String) JOptionPane.showInputDialog(null,
                    "Oppgi ny latinsk term",
                    "Legge til latin",
                    JOptionPane.QUESTION_MESSAGE);

            nyterm = Sonja.fjernmultipleblanke(nyterm);

            // sjekker om strengen fins fra f√∏r p√• noen m√•te
            if (nyterm != null) {
                Sonja.gjortendringer = true;
                currentTerm.nylatin(Sonja.storforbokstav(nyterm));
                endringsrutiner(currentTerm.term + " har f√•tt latintermen " + nyterm, currentTerm);
                visvalgtinfo("latin", currentTerm);
                jRadioButton8.setEnabled(true);
            }
        }
    }

    public void leggetilakronym() {
        if (currentTerm != null) {
            // henter ny term fra bruker
            String nyterm = (String) JOptionPane.showInputDialog(null,
                    "Oppgi ny forkortelse",
                    "Legge til forkortelse",
                    JOptionPane.QUESTION_MESSAGE);
            // sjekker om strengen fins fra f√∏r p√• noen m√•te
            nyterm = Sonja.fjernmultipleblanke(nyterm);
            if (nyterm != null) {
//            if (Sonja.sjekkterm(nyterm)) {
                currentTerm.nyttakronym(Sonja.storforbokstav(nyterm));
                endringsrutiner(currentTerm.term + " har f√•tt forkortelsen" + nyterm, currentTerm);
                jRadioButton9.setEnabled(true);
                visvalgtinfo("forkortelser", currentTerm);
//            } else {
//                kollisjon(nyterm);
//            }
            }
        }
    }

    public void fjerneakronym() {
        String mld = null;
        if (currentTerm != null) {
            int antall = currentTerm.akronymer.size();
            // fins det noen i det hele tatt
            if (antall > 0) {
                if (antall == 1) {
                    // fins det bare en
                    mld = "fjernet akronym "
                            + currentTerm.akronymer.get(0) + " fra " + currentTerm.term;
                    currentTerm.akronymer = new ArrayList<String>();
                } else {
                    // fins det flere
                    String[] liste = new String[antall];
                    for (int i = 0; i < antall; i++) {
                        liste[i] = currentTerm.akronymer.get(i);
                    }
                    String selectedValue = (String) JOptionPane.showInputDialog(null,
                            "Velg forkortelse som skal fjernes", "Fjerne forkortelse",
                            JOptionPane.INFORMATION_MESSAGE, null,
                            liste, liste[0]);
                    if (selectedValue != null) {
                        currentTerm.fjernakronym(selectedValue);
                        mld = "fjernet akronym "
                                + selectedValue + " fra " + currentTerm.term;
                    }
                }
            }
            if (mld != null) {
                endringsrutiner(mld, currentTerm);
                if (currentTerm.akronymer.size() > 0) {
                    visvalgtinfo("forkortelser", currentTerm);
                }
            }

        }
    }

    private String slaasammentobegreper() {
        // returverdien er uten betydning, 
        // brukes for √• avbryte behandlingen
        String retval = null;
        String tmp = "";
        if (currentTerm != null) {
            tmp = currentTerm.term;
        }
        // be om f√∏rste begrep, dvs det som skal bli st√•ende
        String term1 = (String) JOptionPane.showInputDialog(null,
                "Oppgi term som skal beholdes",
                tmp);
        if (term1 != null) {
            String idterm1 = Sonja.getID(term1);

            if (idterm1 == null) {
                melding("Fant ikke begrep med denne termen", "Mangler basisterm");
                return retval;
            }
            Term begrep1 = Sonja.getTerm(idterm1);

            // be om andre begrep, dvs det som skal smeltes sammen med det f√∏rste
            String term2 = (String) JOptionPane.showInputDialog(null,
                    "Oppgi term som skal legges til " + begrep1.term,
                    "Sl√• sammen termer",
                    JOptionPane.QUESTION_MESSAGE);
            if (term2 != null) {
                String idterm2 = Sonja.getID(term2);

                if (idterm2 == null) {
                    melding("Fant ikke begrep med denne termen", "Mangler tilleggsterm.");
                    return retval;
                }
                Term begrep2 = Sonja.getTerm(idterm2);

                // begrepene m√• tilh√∏re samme fasett
                if (!begrep1.type.equalsIgnoreCase(begrep2.type)) {
                    melding("Begrepene m√• tilh√∏re samme fasett", "Ikke begrepfasettsamsvar.");
                    return retval;

                }
                Sonja.fletttotermer(begrep1, begrep2);
                begrep1.fjernduplikatstrenger();
                fylltermskjema(begrep1);
            }
        }

        return retval;
    }

    private void fjerneterm() {
        String tmp = "";
        if (currentTerm != null) {
            tmp = currentTerm.term;
        }
        // be om term som skal fjernes
        String term1 = (String) JOptionPane.showInputDialog(null,
                "Oppgi term som skal fjernes",
                tmp);
        if (term1 != null) {
            Term t = Sonja.getTerm(Sonja.getID(term1));
            Sonja.fjerneterm(t);
            Sonja.lokarslett(t.type, t.term, t.minID);
            tomtermskjema();
            sok(jTextField1.getText());
        }
    }

    public void leggetilmsc() {
        if (currentTerm != null) {
            String mld = null;
            //String note = currentTerm.msc;
            String selectedValue = (String) JOptionPane.showInputDialog(null,
                    "Skriv inn ny MSC", null);
            //note);
            selectedValue = Sonja.fjernmultipleblanke(selectedValue);
            if (selectedValue != null) {

                currentTerm.msc.add(selectedValue);
                mld = currentTerm.term + " har f√•tt MSC " + selectedValue;
                jRadioButton10.setEnabled(true);

            }
            if (mld != null) {
                endringsrutiner(mld, currentTerm);
                visvalgtinfo("msc", currentTerm);
            }

        }
    }

    public void fjernemsc() {
        if (currentTerm != null) {
            int antall = currentTerm.msc.size();
            // fins det noen i det hele tatt
            if (antall > 0) {
                String mld = null;
                if (antall == 1) {
                    // fins det bare en
                    mld = "fjernet msc "
                            + currentTerm.msc.get(0) + " i " + currentTerm.term;
                    currentTerm.msc = new ArrayList<String>();
                } else {
                    // fins det flere
                    String[] liste = new String[antall];
                    for (int i = 0; i < antall; i++) {
                        liste[i] = currentTerm.msc.get(i);
                    }
                    String selectedValue = (String) JOptionPane.showInputDialog(null,
                            "Velg term som skal fjernes", "Fjerne MSC",
                            JOptionPane.INFORMATION_MESSAGE, null,
                            liste, liste[0]);
                    if (selectedValue != null) {
                        currentTerm.fjernmsc(selectedValue);
                        mld = "fjernet msc "
                                + selectedValue + " i " + currentTerm.term;
                        currentTerm.endret();

                    }
                }
                if (mld != null) {
                    endringsrutiner(mld, currentTerm);
                    if (currentTerm.msc.size() > 0) {
                        visvalgtinfo("msc", currentTerm);
                    }
                }

            }
        }
    }

    public void leggetilddc() {
        if (currentTerm != null) {
            String mld = null;
            //String dewey = currentTerm.dewey;
            String selectedValue = (String) JOptionPane.showInputDialog(null,
                    "Skriv inn ny DDC", null);
            //dewey);
            selectedValue = Sonja.fjernmultipleblanke(selectedValue);
            if (selectedValue != null) {
                currentTerm.dewey.add(selectedValue);
                mld = currentTerm.term + " har f√•tt DDC " + selectedValue;
                jRadioButton11.setEnabled(true);
            }
            if (mld != null) {
                endringsrutiner(mld, currentTerm);
                visvalgtinfo("dewey", currentTerm);
            }

        }
    }

    public void fjerneddc() {
        if (currentTerm != null) {
            int antall = currentTerm.dewey.size();
            // fins det noen i det hele tatt
            if (antall > 0) {
                String mld = null;
                if (antall == 1) {
                    // fins det bare en
                    mld = "fjernet ddc "
                            + currentTerm.dewey.get(0) + " i " + currentTerm.term;
                    currentTerm.dewey = new ArrayList<String>();
                } else {
                    // fins det flere
                    String[] liste = new String[antall];
                    for (int i = 0; i < antall; i++) {
                        liste[i] = currentTerm.dewey.get(i);
                    }
                    String selectedValue = (String) JOptionPane.showInputDialog(null,
                            "Velg term som skal fjernes", "Fjerne DDC",
                            JOptionPane.INFORMATION_MESSAGE, null,
                            liste, liste[0]);
                    if (selectedValue != null) {
                        currentTerm.fjernddc(selectedValue);
                        mld = "fjernet DDC "
                                + selectedValue + " i " + currentTerm.term;
                        currentTerm.endret();

                    }
                }
                if (mld != null) {
                    endringsrutiner(mld, currentTerm);
                    if (currentTerm.dewey.size() > 0) {
                        visvalgtinfo("dewey", currentTerm);
                    }
                }

            }
        }
    }

    private void revideredefinisjon() {
        if (currentTerm != null) {
            String definisjon = currentTerm.definisjon;
            String selectedValue = (String) JOptionPane.showInputDialog(null,
                    "Skriv inn ny definisjon",
                    definisjon);
            if (selectedValue != null) {
                if (selectedValue.equals("")) {
                    currentTerm.definisjon = null;
                } else {
                    currentTerm.definisjon = Sonja.storforbokstav(selectedValue);
                }
                endringsrutiner("Definisjon endret for " + currentTerm.term, currentTerm);
            }
        }
    }

    private void revidereinternnote() {
        if (currentTerm != null) {
            String note = currentTerm.note;
            String selectedValue = (String) JOptionPane.showInputDialog(null,
                    "Skriv inn ny intern note",
                    note);
            if (selectedValue != null) {
                if (selectedValue.equals("")) {
                    currentTerm.note = null;
                } else {
                    currentTerm.note = Sonja.storforbokstav(selectedValue);
                }
            }
            endringsrutiner("Intern note endret for " + currentTerm.term, currentTerm);
        }
    }

    private void leggetilstrengemne() {
        settindeksterm();
        String selectedValue = (String) JOptionPane.showInputDialog(null,
                "Skriv inn hovedemne");
        if (selectedValue != null) {
            selectedValue = Sonja.fjernmultipleblanke(selectedValue);
        }
        if (selectedValue != null) {
            sok(selectedValue);
        }
        Sonja.gjortendringer = true;
    }

    private void leggetilstrengunderemne() {
        settindeksterm();
        String selectedValue = (String) JOptionPane.showInputDialog(null,
                "Skriv inn underemne");
        if (selectedValue != null) {
            selectedValue = Sonja.fjernmultipleblanke(selectedValue);
        }
        if (selectedValue != null) {
            sok(selectedValue);
        }
        Sonja.gjortendringer = true;
    }

    private void leggetilstrengsted() {
        settsted();
        String selectedValue = (String) JOptionPane.showInputDialog(null,
                "Skriv inn stedsnavn");
        if (selectedValue != null) {
            selectedValue = Sonja.fjernmultipleblanke(selectedValue);
        }
        if (selectedValue != null) {
            sok(selectedValue);
        }
        Sonja.gjortendringer = true;
    }

    private void leggetilstrengtid() {
        setttid();
        String selectedValue = (String) JOptionPane.showInputDialog(null,
                "Skriv inn tidsangivelse");
        if (selectedValue != null) {
            selectedValue = Sonja.fjernmultipleblanke(selectedValue);
        }
        if (selectedValue != null) {
            sok(selectedValue);
            Sonja.gjortendringer = true;
        }
    }

    private void leggetilstrengform() {
        settform();
        String selectedValue = (String) JOptionPane.showInputDialog(null,
                "Skriv inn formterm");
        if (selectedValue != null) {
            selectedValue = Sonja.fjernmultipleblanke(selectedValue);
        }
        if (selectedValue != null) {
            sok(selectedValue);
        }
        Sonja.gjortendringer = true;
    }

    public void leggetilstrengbruktfor() {
        if (currentTerm != null && currentTerm instanceof Streng) {
            Streng str = (Streng) currentTerm;
            // henter se-henvisning fra bruker
            String nyttsynonym = (String) JOptionPane.showInputDialog(null,
                    "Oppgi ny se-henvisning til strengen",
                    "Legge til se-henvisning",
                    JOptionPane.QUESTION_MESSAGE);
            if (nyttsynonym != null) {
                nyttsynonym = Sonja.fjernmultipleblanke(nyttsynonym);

                // sjekker om se-henvisning fins fra f√∏r p√• noen m√•te
                if (!nyttsynonym.equalsIgnoreCase(currentTerm.term)) {
                    if (Sonja.sjekkterm(nyttsynonym)) {
                        str.addbruktfor(Sonja.storforbokstav(nyttsynonym));
                        endringsrutiner(str.toString()
                                + " har f√•tt ny sehenvisning "
                                + Sonja.storforbokstav(nyttsynonym), str);
                        fyllnyttstrengskjema(str);
                    } else {
                        kollisjon(nyttsynonym);
                    }
                } else {
                    melding("Ha!", "Ikke pr√∏v deg!");
                }
            }
        }

    }

    public void leggetilstrengdewey() {
        if (currentTerm != null && currentTerm instanceof Streng) {
            Streng str = (Streng) currentTerm;
            String mld = null;
            //String dewey = currentTerm.dewey;
            String selectedValue = (String) JOptionPane.showInputDialog(null,
                    "Skriv inn ny DDC", null);
            //dewey);
            if (selectedValue != null) {
                if (selectedValue.equals("")) {
                    //currentTerm.dewey = null;
                    //mld = " DDC fjernet fra " + currentTerm.term;
                } else {
                    str.adddewey(selectedValue);
                    mld = str.toString() + " har f√•tt DDC " + selectedValue;
                }
            }
            if (mld != null) {
                endringsrutiner(mld, str);
                fyllnyttstrengskjema(str);
            }

        }
    }

    public void leggetilstrengmsc() {
        if (currentTerm != null && currentTerm instanceof Streng) {
            Streng str = (Streng) currentTerm;
            String mld = null;
            //String note = currentTerm.msc;
            String selectedValue = (String) JOptionPane.showInputDialog(null,
                    "Skriv inn ny MSC", null);
            //note);
            if (selectedValue != null) {
                if (selectedValue.equals("")) {
                    str.msc = null;
                    // mld = " MSC fjernet fra " + currentTerm.term;
                } else {
                    str.addmsc(selectedValue);
                    mld = str.toString() + " har f√•tt MSC " + selectedValue;

                }
            }
            if (mld != null) {
                endringsrutiner(mld, str);
                fyllnyttstrengskjema(str);
            }

        }
    }

    public void fjernestrengbruktfor() {
        if (currentTerm != null && currentTerm instanceof Streng) {
            Streng str = (Streng) currentTerm;
            int seantall = str.bruktfor.size();
            // fins det noen i det hele tatt
            if (seantall > 0) {
                String mld = null;
                if (seantall == 1) {
                    // fins det bare en
                    mld = str.bruktfor.get(0)
                            + " fjernet som synonym fra " + str.toString();
                    str.bruktfor = new ArrayList<String>();
                    str.endret();
                } else {
                    // fins det flere
                    String[] seliste = new String[seantall];
                    for (int i = 0; i < seantall; i++) {
                        seliste[i] = str.bruktfor.get(i);
                    }
                    String selectedValue = (String) JOptionPane.showInputDialog(null,
                            "Velg BF som skal fjernes", "Rette henvisninger",
                            JOptionPane.INFORMATION_MESSAGE, null,
                            seliste, seliste[0]);
                    if (selectedValue != null) {
                        str.fjernbruktfor(selectedValue);
                        str.endret();
                        mld = selectedValue
                                + " fjernet som synonym fra " + str.toString();
                    }
                }
                if (mld != null) {
                    endringsrutiner(mld, str);
                }

            }
        }

    }

    public void fjernestrengdewey() {

    }

    public void fjernestrengmsc() {

    }

    private void presenterstrengeforslag(ArrayList<Streng> forslag) {
        // TODO treffliste b√∏r opp et niv√• slik at den 
        // kan brukes i andre metoder
        if (forslag != null) {
            Streng[] strengeforslag = new Streng[forslag.size()];
            for (int i = 0; i < forslag.size(); i++) {
                strengeforslag[i] = forslag.get(i);
            }
            Arrays.sort(strengeforslag);
            jLabel1.setText("" + strengeforslag.length + " treff");
            jList1.setListData(strengeforslag);
            jList1.grabFocus(); // trefflistefelt
        } else {
            jList1.setListData(tomliste);
            jLabel1.setText("Ingen treff");
            sokemodus(); // s√∏kefelt
        }
    }

    private void velgfontfarge(Color c) {
        Color fontfarge = null;
        if (c == null) {
            fontfarge = JColorChooser.showDialog(this,
                    "Velg farge for skriften i alle skjemafeltene", null);
        } else {
            fontfarge = c;
        }
        jTextField2.setDisabledTextColor(fontfarge);
        jTextField3.setDisabledTextColor(fontfarge);
        jTextField4.setDisabledTextColor(fontfarge);
        jTextField5.setDisabledTextColor(fontfarge);
        jTextField6.setDisabledTextColor(fontfarge);
        jTextField7.setDisabledTextColor(fontfarge);
        jTextField8.setDisabledTextColor(fontfarge);
        jTextField9.setDisabledTextColor(fontfarge);
        jTextField10.setDisabledTextColor(fontfarge);
        jTextField11.setDisabledTextColor(fontfarge);
        jTextField12.setDisabledTextColor(fontfarge);
        jTextField13.setDisabledTextColor(fontfarge);
        jTextField14.setDisabledTextColor(fontfarge);
        jTextField15.setDisabledTextColor(fontfarge);
        jTextField16.setDisabledTextColor(fontfarge);
        jTextArea1.setDisabledTextColor(fontfarge);
        jTextArea2.setDisabledTextColor(fontfarge);
        jTextArea3.setDisabledTextColor(fontfarge);
        jTextArea4.setDisabledTextColor(fontfarge);
        jTextArea5.setDisabledTextColor(fontfarge);
        jTextArea6.setDisabledTextColor(fontfarge);
        jTextArea7.setDisabledTextColor(fontfarge);
        jTextArea8.setDisabledTextColor(fontfarge);
        jTextArea9.setDisabledTextColor(fontfarge);
        jTextArea10.setDisabledTextColor(fontfarge);
        jTextArea11.setDisabledTextColor(fontfarge);
        jTextArea12.setDisabledTextColor(fontfarge);
        jTextArea13.setDisabledTextColor(fontfarge);
        jTextArea14.setDisabledTextColor(fontfarge);
        jTextArea15.setDisabledTextColor(fontfarge);
        jTextArea16.setDisabledTextColor(fontfarge);
    }

    private void aksepterestreng() {
        Streng str = (Streng) jList1.getSelectedValue();
        if (!Sonja.strengfins(str)) {
            str.addID(Sonja.nesteID());
            fyllnyttstrengskjema(str);
            Sonja.nystreng(str);
            Sonja.lagrelogg("strengforslag akseptert " + str.toStringplain());
            forslag.remove(str);
            Sonja.gjortendringer = true;
            presenterstrengeforslag(forslag);
            Sonja.lagreforslagsfil(forslag);
        } else {
            melding("Strengen fins",
                    "Strengen fins fra f√∏r,\nblir ikke lagt inn.");
        }
    }

    private void forkastestrengeforslag() {
        Streng str = (Streng) jList1.getSelectedValue();
        forslag.remove(str);
        Sonja.lagrelogg("strengforslag forkastet " + str.toStringplain());
        Sonja.gjortendringer = true;
        presenterstrengeforslag(forslag);
        tomnyttstrengskjema();
        Sonja.lagreforslagsfil(forslag);
    }

    public void bestempreflabel(String sprak) {
        // grip riktig liste
        ArrayList<String> liste = null;
        if (sprak.equalsIgnoreCase("engelsk")) {
            liste = currentTerm.engelsk;
        } else if (sprak.equalsIgnoreCase("nynorsk")) {
            liste = currentTerm.nynorsk;
        } else if (sprak.equalsIgnoreCase("latin")) {
            liste = currentTerm.latin;
        }
        if (liste != null && liste.size() > 1) {
            int antall = liste.size();
            // viss det er to, skal de bare bytte plass
            // for√∏vrig m√• man velge
            String[] velgeliste = new String[antall - 1];
            if (antall == 2) {
                String tmp = liste.get(0);
                liste.set(0, liste.get(1));
                liste.set(1, tmp);
            } else {
                for (int i = 1; i < antall; i++) {
                    velgeliste[i - 1] = liste.get(i);
                }
                String selectedValue = (String) JOptionPane.showInputDialog(null,
                        "Velg term som skal bli foretrukken", "Velge term",
                        JOptionPane.INFORMATION_MESSAGE, null,
                        velgeliste, velgeliste[0]);
                if (selectedValue != null) {
                    String tmp = liste.get(0);
                    liste.set(0, selectedValue);
                    boolean funnet = false;
                    for (int i = 1; i < liste.size(); i++) {
                        String tmp2 = liste.get(i);
                        liste.set(i, tmp);
                        tmp = tmp2;
                        if (selectedValue.equals(tmp2)) {
                            break;
                        }
                    }
                }
            }
            if (sprak.equalsIgnoreCase("engelsk")) {
                currentTerm.engelsk = liste;
            } else if (sprak.equalsIgnoreCase("nynorsk")) {
                currentTerm.nynorsk = liste;
            } else if (sprak.equalsIgnoreCase("latin")) {
                currentTerm.latin = liste;
            }
            endringsrutiner("oppdatert prefLabel for " + sprak + " i " + currentTerm.term, currentTerm);
        }

    }

    public void endringsrutiner(String mld, Term t) {
        Sonja.gjortendringer = true;
        Sonja.lagrelogg(mld);
        if (t != null) {
            t.endret();
            fylltermskjema(t);
        }

    }

    public boolean likcurrentterm(Term t1) {
        return t1 == currentTerm;
    }

    private void revidereindeksterm() {
        if (currentTerm != null) {
            String fra = currentTerm.term;
            String type = currentTerm.type;
            String id = currentTerm.minID;
            String til = null;
            String selectedValue = (String) JOptionPane.showInputDialog(null,
                    "Skriv inn ny betegnelse",
                    fra);
            if (selectedValue != null && !selectedValue.equals("")) {
                til = Sonja.storforbokstav(selectedValue);
                if (!fra.equals(til)) {
                    if (Sonja.sjekkterm(til)) {
                        currentTerm.term = til;
                        Sonja.lokarbytt(type, fra, til, id);
                        endringsrutiner("Term endret fra " + fra + " til " + currentTerm.term, currentTerm);
                    } else {
                        kollisjon(til);
                    }
                } else {

                }
            }
        }
    }

    public void nullstillBasemeny() {
        jRadioButtonMenuItem1.setSelected(false);
        jRadioButtonMenuItem2.setSelected(false);
        jRadioButtonMenuItem3.setSelected(false);
        jRadioButtonMenuItem4.setSelected(false);
        jRadioButtonMenuItem5.setSelected(false);
    }

    public void velgbaseparametre() {
        if (jRadioButtonMenuItem1.isSelected()) {
            Sonja.sokavd = "";
            Sonja.sokbibl = "UBO";
        } else if (jRadioButtonMenuItem2.isSelected()) {
            Sonja.sokavd = "ureal?";
            Sonja.sokbibl = "UBO";
        } else if (jRadioButtonMenuItem3.isSelected()) {
            Sonja.sokavd = "";
            Sonja.sokbibl = "UBB";
        } else if (jRadioButtonMenuItem4.isSelected()) {
            Sonja.sokavd = "UBBRB";
            Sonja.sokbibl = "UBB";
        } else if (jRadioButtonMenuItem5.isSelected()) {
            Sonja.sokavd = "";
            Sonja.sokbibl = "";
        }
        if (Sonja.sokbibl.equals("") && Sonja.sokavd.equals("")) {
            jLabel20.setText("BIBSYS");
        } else {
            jLabel20.setText(Sonja.sokbibl + "/" + Sonja.sokavd);
        }
    }

    private void sokID(String sokebegrep) {
        Term[] treffliste = null;
        treffliste = Sonja.searchID(sokebegrep, listefokus);
        if (treffliste != null) {
            Arrays.sort(treffliste);
            jLabel1.setText("" + treffliste.length + " treff");
            jList1.setListData(treffliste);
            jList1.grabFocus(); // trefflistefelt
        } else {
            jList1.setListData(tomliste);
            jLabel1.setText("Ingen treff");
            sokemodus(); // s√∏kefelt
        }
        seogfraliste = false;
        aktiviserstrengeknapper(false);
    }

    void tomloggvindu() {
        jTextArea8.setText("");
    }

}
